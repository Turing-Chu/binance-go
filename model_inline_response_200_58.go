/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// InlineResponse20058 struct for InlineResponse20058
type InlineResponse20058 struct {
	TotalAssetOfBtc string `json:"totalAssetOfBtc"`
	TotalLiabilityOfBtc string `json:"totalLiabilityOfBtc"`
	TotalNetAssetOfBtc string `json:"totalNetAssetOfBtc"`
	SubAccountList []InlineResponse20058SubAccountList `json:"subAccountList"`
}

// NewInlineResponse20058 instantiates a new InlineResponse20058 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20058(totalAssetOfBtc string, totalLiabilityOfBtc string, totalNetAssetOfBtc string, subAccountList []InlineResponse20058SubAccountList) *InlineResponse20058 {
	this := InlineResponse20058{}
	this.TotalAssetOfBtc = totalAssetOfBtc
	this.TotalLiabilityOfBtc = totalLiabilityOfBtc
	this.TotalNetAssetOfBtc = totalNetAssetOfBtc
	this.SubAccountList = subAccountList
	return &this
}

// NewInlineResponse20058WithDefaults instantiates a new InlineResponse20058 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20058WithDefaults() *InlineResponse20058 {
	this := InlineResponse20058{}
	return &this
}

// GetTotalAssetOfBtc returns the TotalAssetOfBtc field value
func (o *InlineResponse20058) GetTotalAssetOfBtc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalAssetOfBtc
}

// GetTotalAssetOfBtcOk returns a tuple with the TotalAssetOfBtc field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20058) GetTotalAssetOfBtcOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalAssetOfBtc, true
}

// SetTotalAssetOfBtc sets field value
func (o *InlineResponse20058) SetTotalAssetOfBtc(v string) {
	o.TotalAssetOfBtc = v
}

// GetTotalLiabilityOfBtc returns the TotalLiabilityOfBtc field value
func (o *InlineResponse20058) GetTotalLiabilityOfBtc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalLiabilityOfBtc
}

// GetTotalLiabilityOfBtcOk returns a tuple with the TotalLiabilityOfBtc field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20058) GetTotalLiabilityOfBtcOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalLiabilityOfBtc, true
}

// SetTotalLiabilityOfBtc sets field value
func (o *InlineResponse20058) SetTotalLiabilityOfBtc(v string) {
	o.TotalLiabilityOfBtc = v
}

// GetTotalNetAssetOfBtc returns the TotalNetAssetOfBtc field value
func (o *InlineResponse20058) GetTotalNetAssetOfBtc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalNetAssetOfBtc
}

// GetTotalNetAssetOfBtcOk returns a tuple with the TotalNetAssetOfBtc field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20058) GetTotalNetAssetOfBtcOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalNetAssetOfBtc, true
}

// SetTotalNetAssetOfBtc sets field value
func (o *InlineResponse20058) SetTotalNetAssetOfBtc(v string) {
	o.TotalNetAssetOfBtc = v
}

// GetSubAccountList returns the SubAccountList field value
func (o *InlineResponse20058) GetSubAccountList() []InlineResponse20058SubAccountList {
	if o == nil {
		var ret []InlineResponse20058SubAccountList
		return ret
	}

	return o.SubAccountList
}

// GetSubAccountListOk returns a tuple with the SubAccountList field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20058) GetSubAccountListOk() (*[]InlineResponse20058SubAccountList, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubAccountList, true
}

// SetSubAccountList sets field value
func (o *InlineResponse20058) SetSubAccountList(v []InlineResponse20058SubAccountList) {
	o.SubAccountList = v
}

func (o InlineResponse20058) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalAssetOfBtc"] = o.TotalAssetOfBtc
	}
	if true {
		toSerialize["totalLiabilityOfBtc"] = o.TotalLiabilityOfBtc
	}
	if true {
		toSerialize["totalNetAssetOfBtc"] = o.TotalNetAssetOfBtc
	}
	if true {
		toSerialize["subAccountList"] = o.SubAccountList
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20058 struct {
	value *InlineResponse20058
	isSet bool
}

func (v NullableInlineResponse20058) Get() *InlineResponse20058 {
	return v.value
}

func (v *NullableInlineResponse20058) Set(val *InlineResponse20058) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20058) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20058) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20058(val *InlineResponse20058) *NullableInlineResponse20058 {
	return &NullableInlineResponse20058{value: val, isSet: true}
}

func (v NullableInlineResponse20058) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20058) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


