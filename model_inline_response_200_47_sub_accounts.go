/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20047SubAccounts struct for InlineResponse20047SubAccounts
type InlineResponse20047SubAccounts struct {
	Email string `json:"email"`
	IsFreeze bool `json:"isFreeze"`
	CreateTime int64 `json:"createTime"`
}

// NewInlineResponse20047SubAccounts instantiates a new InlineResponse20047SubAccounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20047SubAccounts(email string, isFreeze bool, createTime int64) *InlineResponse20047SubAccounts {
	this := InlineResponse20047SubAccounts{}
	this.Email = email
	this.IsFreeze = isFreeze
	this.CreateTime = createTime
	return &this
}

// NewInlineResponse20047SubAccountsWithDefaults instantiates a new InlineResponse20047SubAccounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20047SubAccountsWithDefaults() *InlineResponse20047SubAccounts {
	this := InlineResponse20047SubAccounts{}
	return &this
}

// GetEmail returns the Email field value
func (o *InlineResponse20047SubAccounts) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20047SubAccounts) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *InlineResponse20047SubAccounts) SetEmail(v string) {
	o.Email = v
}

// GetIsFreeze returns the IsFreeze field value
func (o *InlineResponse20047SubAccounts) GetIsFreeze() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFreeze
}

// GetIsFreezeOk returns a tuple with the IsFreeze field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20047SubAccounts) GetIsFreezeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsFreeze, true
}

// SetIsFreeze sets field value
func (o *InlineResponse20047SubAccounts) SetIsFreeze(v bool) {
	o.IsFreeze = v
}

// GetCreateTime returns the CreateTime field value
func (o *InlineResponse20047SubAccounts) GetCreateTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20047SubAccounts) GetCreateTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreateTime, true
}

// SetCreateTime sets field value
func (o *InlineResponse20047SubAccounts) SetCreateTime(v int64) {
	o.CreateTime = v
}

func (o InlineResponse20047SubAccounts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["isFreeze"] = o.IsFreeze
	}
	if true {
		toSerialize["createTime"] = o.CreateTime
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20047SubAccounts struct {
	value *InlineResponse20047SubAccounts
	isSet bool
}

func (v NullableInlineResponse20047SubAccounts) Get() *InlineResponse20047SubAccounts {
	return v.value
}

func (v *NullableInlineResponse20047SubAccounts) Set(val *InlineResponse20047SubAccounts) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20047SubAccounts) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20047SubAccounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20047SubAccounts(val *InlineResponse20047SubAccounts) *NullableInlineResponse20047SubAccounts {
	return &NullableInlineResponse20047SubAccounts{value: val, isSet: true}
}

func (v NullableInlineResponse20047SubAccounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20047SubAccounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


