/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SnapshotSpotSnapshotVos struct for SnapshotSpotSnapshotVos
type SnapshotSpotSnapshotVos struct {
	Data SnapshotSpotData `json:"data"`
	Type string `json:"type"`
	UpdateTime int64 `json:"updateTime"`
}

// NewSnapshotSpotSnapshotVos instantiates a new SnapshotSpotSnapshotVos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotSpotSnapshotVos(data SnapshotSpotData, type_ string, updateTime int64) *SnapshotSpotSnapshotVos {
	this := SnapshotSpotSnapshotVos{}
	this.Data = data
	this.Type = type_
	this.UpdateTime = updateTime
	return &this
}

// NewSnapshotSpotSnapshotVosWithDefaults instantiates a new SnapshotSpotSnapshotVos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotSpotSnapshotVosWithDefaults() *SnapshotSpotSnapshotVos {
	this := SnapshotSpotSnapshotVos{}
	return &this
}

// GetData returns the Data field value
func (o *SnapshotSpotSnapshotVos) GetData() SnapshotSpotData {
	if o == nil {
		var ret SnapshotSpotData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *SnapshotSpotSnapshotVos) GetDataOk() (*SnapshotSpotData, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *SnapshotSpotSnapshotVos) SetData(v SnapshotSpotData) {
	o.Data = v
}

// GetType returns the Type field value
func (o *SnapshotSpotSnapshotVos) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SnapshotSpotSnapshotVos) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SnapshotSpotSnapshotVos) SetType(v string) {
	o.Type = v
}

// GetUpdateTime returns the UpdateTime field value
func (o *SnapshotSpotSnapshotVos) GetUpdateTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value
// and a boolean to check if the value has been set.
func (o *SnapshotSpotSnapshotVos) GetUpdateTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdateTime, true
}

// SetUpdateTime sets field value
func (o *SnapshotSpotSnapshotVos) SetUpdateTime(v int64) {
	o.UpdateTime = v
}

func (o SnapshotSpotSnapshotVos) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotSpotSnapshotVos struct {
	value *SnapshotSpotSnapshotVos
	isSet bool
}

func (v NullableSnapshotSpotSnapshotVos) Get() *SnapshotSpotSnapshotVos {
	return v.value
}

func (v *NullableSnapshotSpotSnapshotVos) Set(val *SnapshotSpotSnapshotVos) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotSpotSnapshotVos) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotSpotSnapshotVos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotSpotSnapshotVos(val *SnapshotSpotSnapshotVos) *NullableSnapshotSpotSnapshotVos {
	return &NullableSnapshotSpotSnapshotVos{value: val, isSet: true}
}

func (v NullableSnapshotSpotSnapshotVos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotSpotSnapshotVos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


