/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API generated with [binance/binance-api-swagger/blob/master/spot_api.yaml](https://github.com/binance/binance-api-swagger/blob/master/spot_api.yaml) with commit [v1.2.0 release](https://github.com/binance/binance-api-swagger/commit/60d14be031c031600c853d5cdab86db5ab73603e)  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
Contact: qishiwenjun@163.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// SubAccountCOINFuturesDetails struct for SubAccountCOINFuturesDetails
type SubAccountCOINFuturesDetails struct {
	Email       string                               `json:"email"`
	Assets      []SubAccountCOINFuturesDetailsAssets `json:"assets"`
	CanDeposit  bool                                 `json:"canDeposit"`
	CanTrade    bool                                 `json:"canTrade"`
	CanWithdraw bool                                 `json:"canWithdraw"`
	FeeTier     int64                                `json:"feeTier"`
	UpdateTime  int64                                `json:"updateTime"`
}

// NewSubAccountCOINFuturesDetails instantiates a new SubAccountCOINFuturesDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubAccountCOINFuturesDetails(email string, assets []SubAccountCOINFuturesDetailsAssets, canDeposit bool, canTrade bool, canWithdraw bool, feeTier int64, updateTime int64) *SubAccountCOINFuturesDetails {
	this := SubAccountCOINFuturesDetails{}
	this.Email = email
	this.Assets = assets
	this.CanDeposit = canDeposit
	this.CanTrade = canTrade
	this.CanWithdraw = canWithdraw
	this.FeeTier = feeTier
	this.UpdateTime = updateTime
	return &this
}

// NewSubAccountCOINFuturesDetailsWithDefaults instantiates a new SubAccountCOINFuturesDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubAccountCOINFuturesDetailsWithDefaults() *SubAccountCOINFuturesDetails {
	this := SubAccountCOINFuturesDetails{}
	return &this
}

// GetEmail returns the Email field value
func (o *SubAccountCOINFuturesDetails) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *SubAccountCOINFuturesDetails) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *SubAccountCOINFuturesDetails) SetEmail(v string) {
	o.Email = v
}

// GetAssets returns the Assets field value
func (o *SubAccountCOINFuturesDetails) GetAssets() []SubAccountCOINFuturesDetailsAssets {
	if o == nil {
		var ret []SubAccountCOINFuturesDetailsAssets
		return ret
	}

	return o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value
// and a boolean to check if the value has been set.
func (o *SubAccountCOINFuturesDetails) GetAssetsOk() (*[]SubAccountCOINFuturesDetailsAssets, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assets, true
}

// SetAssets sets field value
func (o *SubAccountCOINFuturesDetails) SetAssets(v []SubAccountCOINFuturesDetailsAssets) {
	o.Assets = v
}

// GetCanDeposit returns the CanDeposit field value
func (o *SubAccountCOINFuturesDetails) GetCanDeposit() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanDeposit
}

// GetCanDepositOk returns a tuple with the CanDeposit field value
// and a boolean to check if the value has been set.
func (o *SubAccountCOINFuturesDetails) GetCanDepositOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanDeposit, true
}

// SetCanDeposit sets field value
func (o *SubAccountCOINFuturesDetails) SetCanDeposit(v bool) {
	o.CanDeposit = v
}

// GetCanTrade returns the CanTrade field value
func (o *SubAccountCOINFuturesDetails) GetCanTrade() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanTrade
}

// GetCanTradeOk returns a tuple with the CanTrade field value
// and a boolean to check if the value has been set.
func (o *SubAccountCOINFuturesDetails) GetCanTradeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanTrade, true
}

// SetCanTrade sets field value
func (o *SubAccountCOINFuturesDetails) SetCanTrade(v bool) {
	o.CanTrade = v
}

// GetCanWithdraw returns the CanWithdraw field value
func (o *SubAccountCOINFuturesDetails) GetCanWithdraw() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanWithdraw
}

// GetCanWithdrawOk returns a tuple with the CanWithdraw field value
// and a boolean to check if the value has been set.
func (o *SubAccountCOINFuturesDetails) GetCanWithdrawOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanWithdraw, true
}

// SetCanWithdraw sets field value
func (o *SubAccountCOINFuturesDetails) SetCanWithdraw(v bool) {
	o.CanWithdraw = v
}

// GetFeeTier returns the FeeTier field value
func (o *SubAccountCOINFuturesDetails) GetFeeTier() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FeeTier
}

// GetFeeTierOk returns a tuple with the FeeTier field value
// and a boolean to check if the value has been set.
func (o *SubAccountCOINFuturesDetails) GetFeeTierOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeTier, true
}

// SetFeeTier sets field value
func (o *SubAccountCOINFuturesDetails) SetFeeTier(v int64) {
	o.FeeTier = v
}

// GetUpdateTime returns the UpdateTime field value
func (o *SubAccountCOINFuturesDetails) GetUpdateTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value
// and a boolean to check if the value has been set.
func (o *SubAccountCOINFuturesDetails) GetUpdateTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdateTime, true
}

// SetUpdateTime sets field value
func (o *SubAccountCOINFuturesDetails) SetUpdateTime(v int64) {
	o.UpdateTime = v
}

func (o SubAccountCOINFuturesDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["assets"] = o.Assets
	}
	if true {
		toSerialize["canDeposit"] = o.CanDeposit
	}
	if true {
		toSerialize["canTrade"] = o.CanTrade
	}
	if true {
		toSerialize["canWithdraw"] = o.CanWithdraw
	}
	if true {
		toSerialize["feeTier"] = o.FeeTier
	}
	if true {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return json.Marshal(toSerialize)
}

type NullableSubAccountCOINFuturesDetails struct {
	value *SubAccountCOINFuturesDetails
	isSet bool
}

func (v NullableSubAccountCOINFuturesDetails) Get() *SubAccountCOINFuturesDetails {
	return v.value
}

func (v *NullableSubAccountCOINFuturesDetails) Set(val *SubAccountCOINFuturesDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableSubAccountCOINFuturesDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableSubAccountCOINFuturesDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubAccountCOINFuturesDetails(val *SubAccountCOINFuturesDetails) *NullableSubAccountCOINFuturesDetails {
	return &NullableSubAccountCOINFuturesDetails{value: val, isSet: true}
}

func (v NullableSubAccountCOINFuturesDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubAccountCOINFuturesDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
