/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20042 struct for InlineResponse20042
type InlineResponse20042 struct {
	Total int32 `json:"total"`
	Rows []InlineResponse20042Rows `json:"rows"`
}

// NewInlineResponse20042 instantiates a new InlineResponse20042 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20042(total int32, rows []InlineResponse20042Rows) *InlineResponse20042 {
	this := InlineResponse20042{}
	this.Total = total
	this.Rows = rows
	return &this
}

// NewInlineResponse20042WithDefaults instantiates a new InlineResponse20042 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20042WithDefaults() *InlineResponse20042 {
	this := InlineResponse20042{}
	return &this
}

// GetTotal returns the Total field value
func (o *InlineResponse20042) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20042) GetTotalOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *InlineResponse20042) SetTotal(v int32) {
	o.Total = v
}

// GetRows returns the Rows field value
func (o *InlineResponse20042) GetRows() []InlineResponse20042Rows {
	if o == nil {
		var ret []InlineResponse20042Rows
		return ret
	}

	return o.Rows
}

// GetRowsOk returns a tuple with the Rows field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20042) GetRowsOk() (*[]InlineResponse20042Rows, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Rows, true
}

// SetRows sets field value
func (o *InlineResponse20042) SetRows(v []InlineResponse20042Rows) {
	o.Rows = v
}

func (o InlineResponse20042) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["rows"] = o.Rows
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20042 struct {
	value *InlineResponse20042
	isSet bool
}

func (v NullableInlineResponse20042) Get() *InlineResponse20042 {
	return v.value
}

func (v *NullableInlineResponse20042) Set(val *InlineResponse20042) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20042) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20042) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20042(val *InlineResponse20042) *NullableInlineResponse20042 {
	return &NullableInlineResponse20042{value: val, isSet: true}
}

func (v NullableInlineResponse20042) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20042) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


