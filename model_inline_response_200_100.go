/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// InlineResponse200100 struct for InlineResponse200100
type InlineResponse200100 struct {
	Id float64 `json:"id"`
	// S, P, and F for \"success\", \"pending\", and \"failure\"
	Status string `json:"status"`
	TokenName string `json:"tokenName"`
	// Redemption token amount
	RedeemAmount string `json:"redeemAmount"`
	// Redemption value in usdt
	Amount string `json:"amount"`
	Timestamp int64 `json:"timestamp"`
}

// NewInlineResponse200100 instantiates a new InlineResponse200100 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200100(id float64, status string, tokenName string, redeemAmount string, amount string, timestamp int64) *InlineResponse200100 {
	this := InlineResponse200100{}
	this.Id = id
	this.Status = status
	this.TokenName = tokenName
	this.RedeemAmount = redeemAmount
	this.Amount = amount
	this.Timestamp = timestamp
	return &this
}

// NewInlineResponse200100WithDefaults instantiates a new InlineResponse200100 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200100WithDefaults() *InlineResponse200100 {
	this := InlineResponse200100{}
	return &this
}

// GetId returns the Id field value
func (o *InlineResponse200100) GetId() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200100) GetIdOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InlineResponse200100) SetId(v float64) {
	o.Id = v
}

// GetStatus returns the Status field value
func (o *InlineResponse200100) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200100) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InlineResponse200100) SetStatus(v string) {
	o.Status = v
}

// GetTokenName returns the TokenName field value
func (o *InlineResponse200100) GetTokenName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenName
}

// GetTokenNameOk returns a tuple with the TokenName field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200100) GetTokenNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TokenName, true
}

// SetTokenName sets field value
func (o *InlineResponse200100) SetTokenName(v string) {
	o.TokenName = v
}

// GetRedeemAmount returns the RedeemAmount field value
func (o *InlineResponse200100) GetRedeemAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedeemAmount
}

// GetRedeemAmountOk returns a tuple with the RedeemAmount field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200100) GetRedeemAmountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RedeemAmount, true
}

// SetRedeemAmount sets field value
func (o *InlineResponse200100) SetRedeemAmount(v string) {
	o.RedeemAmount = v
}

// GetAmount returns the Amount field value
func (o *InlineResponse200100) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200100) GetAmountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *InlineResponse200100) SetAmount(v string) {
	o.Amount = v
}

// GetTimestamp returns the Timestamp field value
func (o *InlineResponse200100) GetTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200100) GetTimestampOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *InlineResponse200100) SetTimestamp(v int64) {
	o.Timestamp = v
}

func (o InlineResponse200100) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["tokenName"] = o.TokenName
	}
	if true {
		toSerialize["redeemAmount"] = o.RedeemAmount
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200100 struct {
	value *InlineResponse200100
	isSet bool
}

func (v NullableInlineResponse200100) Get() *InlineResponse200100 {
	return v.value
}

func (v *NullableInlineResponse200100) Set(val *InlineResponse200100) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200100) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200100) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200100(val *InlineResponse200100) *NullableInlineResponse200100 {
	return &NullableInlineResponse200100{value: val, isSet: true}
}

func (v NullableInlineResponse200100) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200100) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


