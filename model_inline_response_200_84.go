/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20084 struct for InlineResponse20084
type InlineResponse20084 struct {
	DailyPurchaseId int64 `json:"dailyPurchaseId"`
	Success bool `json:"success"`
	Time int64 `json:"time"`
}

// NewInlineResponse20084 instantiates a new InlineResponse20084 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20084(dailyPurchaseId int64, success bool, time int64) *InlineResponse20084 {
	this := InlineResponse20084{}
	this.DailyPurchaseId = dailyPurchaseId
	this.Success = success
	this.Time = time
	return &this
}

// NewInlineResponse20084WithDefaults instantiates a new InlineResponse20084 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20084WithDefaults() *InlineResponse20084 {
	this := InlineResponse20084{}
	return &this
}

// GetDailyPurchaseId returns the DailyPurchaseId field value
func (o *InlineResponse20084) GetDailyPurchaseId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DailyPurchaseId
}

// GetDailyPurchaseIdOk returns a tuple with the DailyPurchaseId field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20084) GetDailyPurchaseIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DailyPurchaseId, true
}

// SetDailyPurchaseId sets field value
func (o *InlineResponse20084) SetDailyPurchaseId(v int64) {
	o.DailyPurchaseId = v
}

// GetSuccess returns the Success field value
func (o *InlineResponse20084) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20084) GetSuccessOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *InlineResponse20084) SetSuccess(v bool) {
	o.Success = v
}

// GetTime returns the Time field value
func (o *InlineResponse20084) GetTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20084) GetTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *InlineResponse20084) SetTime(v int64) {
	o.Time = v
}

func (o InlineResponse20084) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dailyPurchaseId"] = o.DailyPurchaseId
	}
	if true {
		toSerialize["success"] = o.Success
	}
	if true {
		toSerialize["time"] = o.Time
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20084 struct {
	value *InlineResponse20084
	isSet bool
}

func (v NullableInlineResponse20084) Get() *InlineResponse20084 {
	return v.value
}

func (v *NullableInlineResponse20084) Set(val *InlineResponse20084) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20084) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20084) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20084(val *InlineResponse20084) *NullableInlineResponse20084 {
	return &NullableInlineResponse20084{value: val, isSet: true}
}

func (v NullableInlineResponse20084) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20084) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


