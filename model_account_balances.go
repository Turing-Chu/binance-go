/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API generated with [binance/binance-api-swagger/blob/master/spot_api.yaml](https://github.com/binance/binance-api-swagger/blob/master/spot_api.yaml) with commit [v1.2.0 release](https://github.com/binance/binance-api-swagger/commit/60d14be031c031600c853d5cdab86db5ab73603e)  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
Contact: qishiwenjun@163.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// AccountBalances struct for AccountBalances
type AccountBalances struct {
	Asset  string `json:"asset"`
	Free   string `json:"free"`
	Locked string `json:"locked"`
}

// NewAccountBalances instantiates a new AccountBalances object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountBalances(asset string, free string, locked string) *AccountBalances {
	this := AccountBalances{}
	this.Asset = asset
	this.Free = free
	this.Locked = locked
	return &this
}

// NewAccountBalancesWithDefaults instantiates a new AccountBalances object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountBalancesWithDefaults() *AccountBalances {
	this := AccountBalances{}
	return &this
}

// GetAsset returns the Asset field value
func (o *AccountBalances) GetAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *AccountBalances) GetAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *AccountBalances) SetAsset(v string) {
	o.Asset = v
}

// GetFree returns the Free field value
func (o *AccountBalances) GetFree() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Free
}

// GetFreeOk returns a tuple with the Free field value
// and a boolean to check if the value has been set.
func (o *AccountBalances) GetFreeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Free, true
}

// SetFree sets field value
func (o *AccountBalances) SetFree(v string) {
	o.Free = v
}

// GetLocked returns the Locked field value
func (o *AccountBalances) GetLocked() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locked
}

// GetLockedOk returns a tuple with the Locked field value
// and a boolean to check if the value has been set.
func (o *AccountBalances) GetLockedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locked, true
}

// SetLocked sets field value
func (o *AccountBalances) SetLocked(v string) {
	o.Locked = v
}

func (o AccountBalances) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["asset"] = o.Asset
	}
	if true {
		toSerialize["free"] = o.Free
	}
	if true {
		toSerialize["locked"] = o.Locked
	}
	return json.Marshal(toSerialize)
}

type NullableAccountBalances struct {
	value *AccountBalances
	isSet bool
}

func (v NullableAccountBalances) Get() *AccountBalances {
	return v.value
}

func (v *NullableAccountBalances) Set(val *AccountBalances) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountBalances) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountBalances) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountBalances(val *AccountBalances) *NullableAccountBalances {
	return &NullableAccountBalances{value: val, isSet: true}
}

func (v NullableAccountBalances) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountBalances) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
