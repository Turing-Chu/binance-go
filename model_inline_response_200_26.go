/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// InlineResponse20026 struct for InlineResponse20026
type InlineResponse20026 struct {
	EnabledAccount int64 `json:"enabledAccount"`
	MaxAccount int64 `json:"maxAccount"`
}

// NewInlineResponse20026 instantiates a new InlineResponse20026 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20026(enabledAccount int64, maxAccount int64) *InlineResponse20026 {
	this := InlineResponse20026{}
	this.EnabledAccount = enabledAccount
	this.MaxAccount = maxAccount
	return &this
}

// NewInlineResponse20026WithDefaults instantiates a new InlineResponse20026 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20026WithDefaults() *InlineResponse20026 {
	this := InlineResponse20026{}
	return &this
}

// GetEnabledAccount returns the EnabledAccount field value
func (o *InlineResponse20026) GetEnabledAccount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EnabledAccount
}

// GetEnabledAccountOk returns a tuple with the EnabledAccount field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20026) GetEnabledAccountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EnabledAccount, true
}

// SetEnabledAccount sets field value
func (o *InlineResponse20026) SetEnabledAccount(v int64) {
	o.EnabledAccount = v
}

// GetMaxAccount returns the MaxAccount field value
func (o *InlineResponse20026) GetMaxAccount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxAccount
}

// GetMaxAccountOk returns a tuple with the MaxAccount field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20026) GetMaxAccountOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MaxAccount, true
}

// SetMaxAccount sets field value
func (o *InlineResponse20026) SetMaxAccount(v int64) {
	o.MaxAccount = v
}

func (o InlineResponse20026) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enabledAccount"] = o.EnabledAccount
	}
	if true {
		toSerialize["maxAccount"] = o.MaxAccount
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20026 struct {
	value *InlineResponse20026
	isSet bool
}

func (v NullableInlineResponse20026) Get() *InlineResponse20026 {
	return v.value
}

func (v *NullableInlineResponse20026) Set(val *InlineResponse20026) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20026) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20026) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20026(val *InlineResponse20026) *NullableInlineResponse20026 {
	return &NullableInlineResponse20026{value: val, isSet: true}
}

func (v NullableInlineResponse20026) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20026) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


