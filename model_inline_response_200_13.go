/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// InlineResponse20013 struct for InlineResponse20013
type InlineResponse20013 struct {
	Id int64 `json:"id"`
	Symbol string `json:"symbol"`
	Base string `json:"base"`
	Quote string `json:"quote"`
	IsMarginTrade bool `json:"isMarginTrade"`
	IsBuyAllowed bool `json:"isBuyAllowed"`
	IsSellAllowed bool `json:"isSellAllowed"`
}

// NewInlineResponse20013 instantiates a new InlineResponse20013 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20013(id int64, symbol string, base string, quote string, isMarginTrade bool, isBuyAllowed bool, isSellAllowed bool) *InlineResponse20013 {
	this := InlineResponse20013{}
	this.Id = id
	this.Symbol = symbol
	this.Base = base
	this.Quote = quote
	this.IsMarginTrade = isMarginTrade
	this.IsBuyAllowed = isBuyAllowed
	this.IsSellAllowed = isSellAllowed
	return &this
}

// NewInlineResponse20013WithDefaults instantiates a new InlineResponse20013 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20013WithDefaults() *InlineResponse20013 {
	this := InlineResponse20013{}
	return &this
}

// GetId returns the Id field value
func (o *InlineResponse20013) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InlineResponse20013) SetId(v int64) {
	o.Id = v
}

// GetSymbol returns the Symbol field value
func (o *InlineResponse20013) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetSymbolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *InlineResponse20013) SetSymbol(v string) {
	o.Symbol = v
}

// GetBase returns the Base field value
func (o *InlineResponse20013) GetBase() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Base
}

// GetBaseOk returns a tuple with the Base field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetBaseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Base, true
}

// SetBase sets field value
func (o *InlineResponse20013) SetBase(v string) {
	o.Base = v
}

// GetQuote returns the Quote field value
func (o *InlineResponse20013) GetQuote() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Quote
}

// GetQuoteOk returns a tuple with the Quote field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetQuoteOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Quote, true
}

// SetQuote sets field value
func (o *InlineResponse20013) SetQuote(v string) {
	o.Quote = v
}

// GetIsMarginTrade returns the IsMarginTrade field value
func (o *InlineResponse20013) GetIsMarginTrade() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsMarginTrade
}

// GetIsMarginTradeOk returns a tuple with the IsMarginTrade field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetIsMarginTradeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsMarginTrade, true
}

// SetIsMarginTrade sets field value
func (o *InlineResponse20013) SetIsMarginTrade(v bool) {
	o.IsMarginTrade = v
}

// GetIsBuyAllowed returns the IsBuyAllowed field value
func (o *InlineResponse20013) GetIsBuyAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBuyAllowed
}

// GetIsBuyAllowedOk returns a tuple with the IsBuyAllowed field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetIsBuyAllowedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsBuyAllowed, true
}

// SetIsBuyAllowed sets field value
func (o *InlineResponse20013) SetIsBuyAllowed(v bool) {
	o.IsBuyAllowed = v
}

// GetIsSellAllowed returns the IsSellAllowed field value
func (o *InlineResponse20013) GetIsSellAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSellAllowed
}

// GetIsSellAllowedOk returns a tuple with the IsSellAllowed field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetIsSellAllowedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsSellAllowed, true
}

// SetIsSellAllowed sets field value
func (o *InlineResponse20013) SetIsSellAllowed(v bool) {
	o.IsSellAllowed = v
}

func (o InlineResponse20013) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["symbol"] = o.Symbol
	}
	if true {
		toSerialize["base"] = o.Base
	}
	if true {
		toSerialize["quote"] = o.Quote
	}
	if true {
		toSerialize["isMarginTrade"] = o.IsMarginTrade
	}
	if true {
		toSerialize["isBuyAllowed"] = o.IsBuyAllowed
	}
	if true {
		toSerialize["isSellAllowed"] = o.IsSellAllowed
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20013 struct {
	value *InlineResponse20013
	isSet bool
}

func (v NullableInlineResponse20013) Get() *InlineResponse20013 {
	return v.value
}

func (v *NullableInlineResponse20013) Set(val *InlineResponse20013) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20013) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20013) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20013(val *InlineResponse20013) *NullableInlineResponse20013 {
	return &NullableInlineResponse20013{value: val, isSet: true}
}

func (v NullableInlineResponse20013) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20013) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


