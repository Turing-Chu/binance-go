/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API generated with [binance/binance-api-swagger/blob/master/spot_api.yaml](https://github.com/binance/binance-api-swagger/blob/master/spot_api.yaml) with commit [v1.2.0 release](https://github.com/binance/binance-api-swagger/commit/60d14be031c031600c853d5cdab86db5ab73603e)  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
Contact: qishiwenjun@163.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// InlineResponse20090DataOtherProfits struct for InlineResponse20090DataOtherProfits
type InlineResponse20090DataOtherProfits struct {
	// Mining date
	Time int64 `json:"time"`
	// Coin Name
	CoinName string `json:"coinName"`
	// 1: Merged Mining, 2: Activity Bonus, 3:Rebate 4:Smart Pool 6:Income Transfer 7:Pool Savings
	Type         int32   `json:"type"`
	ProfitAmount float64 `json:"profitAmount"`
	// 0:Unpaid, 1:Paying  2ï¼šPaid
	Status int32 `json:"status"`
}

// NewInlineResponse20090DataOtherProfits instantiates a new InlineResponse20090DataOtherProfits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20090DataOtherProfits(time int64, coinName string, type_ int32, profitAmount float64, status int32) *InlineResponse20090DataOtherProfits {
	this := InlineResponse20090DataOtherProfits{}
	this.Time = time
	this.CoinName = coinName
	this.Type = type_
	this.ProfitAmount = profitAmount
	this.Status = status
	return &this
}

// NewInlineResponse20090DataOtherProfitsWithDefaults instantiates a new InlineResponse20090DataOtherProfits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20090DataOtherProfitsWithDefaults() *InlineResponse20090DataOtherProfits {
	this := InlineResponse20090DataOtherProfits{}
	return &this
}

// GetTime returns the Time field value
func (o *InlineResponse20090DataOtherProfits) GetTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20090DataOtherProfits) GetTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *InlineResponse20090DataOtherProfits) SetTime(v int64) {
	o.Time = v
}

// GetCoinName returns the CoinName field value
func (o *InlineResponse20090DataOtherProfits) GetCoinName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CoinName
}

// GetCoinNameOk returns a tuple with the CoinName field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20090DataOtherProfits) GetCoinNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CoinName, true
}

// SetCoinName sets field value
func (o *InlineResponse20090DataOtherProfits) SetCoinName(v string) {
	o.CoinName = v
}

// GetType returns the Type field value
func (o *InlineResponse20090DataOtherProfits) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20090DataOtherProfits) GetTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InlineResponse20090DataOtherProfits) SetType(v int32) {
	o.Type = v
}

// GetProfitAmount returns the ProfitAmount field value
func (o *InlineResponse20090DataOtherProfits) GetProfitAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.ProfitAmount
}

// GetProfitAmountOk returns a tuple with the ProfitAmount field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20090DataOtherProfits) GetProfitAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfitAmount, true
}

// SetProfitAmount sets field value
func (o *InlineResponse20090DataOtherProfits) SetProfitAmount(v float64) {
	o.ProfitAmount = v
}

// GetStatus returns the Status field value
func (o *InlineResponse20090DataOtherProfits) GetStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20090DataOtherProfits) GetStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InlineResponse20090DataOtherProfits) SetStatus(v int32) {
	o.Status = v
}

func (o InlineResponse20090DataOtherProfits) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["time"] = o.Time
	}
	if true {
		toSerialize["coinName"] = o.CoinName
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["profitAmount"] = o.ProfitAmount
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20090DataOtherProfits struct {
	value *InlineResponse20090DataOtherProfits
	isSet bool
}

func (v NullableInlineResponse20090DataOtherProfits) Get() *InlineResponse20090DataOtherProfits {
	return v.value
}

func (v *NullableInlineResponse20090DataOtherProfits) Set(val *InlineResponse20090DataOtherProfits) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20090DataOtherProfits) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20090DataOtherProfits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20090DataOtherProfits(val *InlineResponse20090DataOtherProfits) *NullableInlineResponse20090DataOtherProfits {
	return &NullableInlineResponse20090DataOtherProfits{value: val, isSet: true}
}

func (v NullableInlineResponse20090DataOtherProfits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20090DataOtherProfits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
