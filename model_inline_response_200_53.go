/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API generated with [binance/binance-api-swagger/blob/master/spot_api.yaml](https://github.com/binance/binance-api-swagger/blob/master/spot_api.yaml) with commit [v1.2.0 release](https://github.com/binance/binance-api-swagger/commit/60d14be031c031600c853d5cdab86db5ab73603e)  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
Contact: qishiwenjun@163.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// InlineResponse20053 struct for InlineResponse20053
type InlineResponse20053 struct {
	Address string `json:"address"`
	Coin    string `json:"coin"`
	Tag     string `json:"tag"`
	Url     string `json:"url"`
}

// NewInlineResponse20053 instantiates a new InlineResponse20053 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20053(address string, coin string, tag string, url string) *InlineResponse20053 {
	this := InlineResponse20053{}
	this.Address = address
	this.Coin = coin
	this.Tag = tag
	this.Url = url
	return &this
}

// NewInlineResponse20053WithDefaults instantiates a new InlineResponse20053 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20053WithDefaults() *InlineResponse20053 {
	this := InlineResponse20053{}
	return &this
}

// GetAddress returns the Address field value
func (o *InlineResponse20053) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20053) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *InlineResponse20053) SetAddress(v string) {
	o.Address = v
}

// GetCoin returns the Coin field value
func (o *InlineResponse20053) GetCoin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Coin
}

// GetCoinOk returns a tuple with the Coin field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20053) GetCoinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Coin, true
}

// SetCoin sets field value
func (o *InlineResponse20053) SetCoin(v string) {
	o.Coin = v
}

// GetTag returns the Tag field value
func (o *InlineResponse20053) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20053) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *InlineResponse20053) SetTag(v string) {
	o.Tag = v
}

// GetUrl returns the Url field value
func (o *InlineResponse20053) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20053) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *InlineResponse20053) SetUrl(v string) {
	o.Url = v
}

func (o InlineResponse20053) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["coin"] = o.Coin
	}
	if true {
		toSerialize["tag"] = o.Tag
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20053 struct {
	value *InlineResponse20053
	isSet bool
}

func (v NullableInlineResponse20053) Get() *InlineResponse20053 {
	return v.value
}

func (v *NullableInlineResponse20053) Set(val *InlineResponse20053) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20053) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20053) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20053(val *InlineResponse20053) *NullableInlineResponse20053 {
	return &NullableInlineResponse20053{value: val, isSet: true}
}

func (v NullableInlineResponse20053) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20053) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
