/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MarginOcoOrderOrders struct for MarginOcoOrderOrders
type MarginOcoOrderOrders struct {
	Symbol string `json:"symbol"`
	OrderId int64 `json:"orderId"`
	ClientOrderId string `json:"clientOrderId"`
}

// NewMarginOcoOrderOrders instantiates a new MarginOcoOrderOrders object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarginOcoOrderOrders(symbol string, orderId int64, clientOrderId string) *MarginOcoOrderOrders {
	this := MarginOcoOrderOrders{}
	this.Symbol = symbol
	this.OrderId = orderId
	this.ClientOrderId = clientOrderId
	return &this
}

// NewMarginOcoOrderOrdersWithDefaults instantiates a new MarginOcoOrderOrders object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarginOcoOrderOrdersWithDefaults() *MarginOcoOrderOrders {
	this := MarginOcoOrderOrders{}
	return &this
}

// GetSymbol returns the Symbol field value
func (o *MarginOcoOrderOrders) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *MarginOcoOrderOrders) GetSymbolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *MarginOcoOrderOrders) SetSymbol(v string) {
	o.Symbol = v
}

// GetOrderId returns the OrderId field value
func (o *MarginOcoOrderOrders) GetOrderId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *MarginOcoOrderOrders) GetOrderIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *MarginOcoOrderOrders) SetOrderId(v int64) {
	o.OrderId = v
}

// GetClientOrderId returns the ClientOrderId field value
func (o *MarginOcoOrderOrders) GetClientOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientOrderId
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value
// and a boolean to check if the value has been set.
func (o *MarginOcoOrderOrders) GetClientOrderIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientOrderId, true
}

// SetClientOrderId sets field value
func (o *MarginOcoOrderOrders) SetClientOrderId(v string) {
	o.ClientOrderId = v
}

func (o MarginOcoOrderOrders) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["symbol"] = o.Symbol
	}
	if true {
		toSerialize["orderId"] = o.OrderId
	}
	if true {
		toSerialize["clientOrderId"] = o.ClientOrderId
	}
	return json.Marshal(toSerialize)
}

type NullableMarginOcoOrderOrders struct {
	value *MarginOcoOrderOrders
	isSet bool
}

func (v NullableMarginOcoOrderOrders) Get() *MarginOcoOrderOrders {
	return v.value
}

func (v *NullableMarginOcoOrderOrders) Set(val *MarginOcoOrderOrders) {
	v.value = val
	v.isSet = true
}

func (v NullableMarginOcoOrderOrders) IsSet() bool {
	return v.isSet
}

func (v *NullableMarginOcoOrderOrders) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarginOcoOrderOrders(val *MarginOcoOrderOrders) *NullableMarginOcoOrderOrders {
	return &NullableMarginOcoOrderOrders{value: val, isSet: true}
}

func (v NullableMarginOcoOrderOrders) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarginOcoOrderOrders) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


