/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API generated with [binance/binance-api-swagger/blob/master/spot_api.yaml](https://github.com/binance/binance-api-swagger/blob/master/spot_api.yaml) with commit [v1.2.0 release](https://github.com/binance/binance-api-swagger/commit/60d14be031c031600c853d5cdab86db5ab73603e)  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
Contact: qishiwenjun@163.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// InlineResponse20045 struct for InlineResponse20045
type InlineResponse20045 struct {
	IpRestrict bool  `json:"ipRestrict"`
	CreateTime int64 `json:"createTime"`
	// This option allows you to withdraw via API. You must apply the IP Access Restriction filter in order to enable withdrawals
	EnableWithdrawals bool `json:"enableWithdrawals"`
	// This option authorizes this key to transfer funds between your master account and your sub account instantly
	EnableInternalTransfer bool `json:"enableInternalTransfer"`
	// Authorizes this key to be used for a dedicated universal transfer API to transfer multiple supported currencies. Each business's own transfer API rights are not affected by this authorization
	PermitsUniversalTransfer bool `json:"permitsUniversalTransfer"`
	// Authorizes this key to Vanilla options trading
	EnableVanillaOptions bool `json:"enableVanillaOptions"`
	EnableReading        bool `json:"enableReading"`
	// API Key created before your futures account opened does not support futures API service
	EnableFutures bool `json:"enableFutures"`
	// This option can be adjusted after the Cross Margin account transfer is completed
	EnableMargin               bool `json:"enableMargin"`
	EnableSpotAndMarginTrading bool `json:"enableSpotAndMarginTrading"`
	// Expiration time for spot and margin trading permission
	TradingAuthorityExpirationTime int64 `json:"tradingAuthorityExpirationTime"`
}

// NewInlineResponse20045 instantiates a new InlineResponse20045 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20045(ipRestrict bool, createTime int64, enableWithdrawals bool, enableInternalTransfer bool, permitsUniversalTransfer bool, enableVanillaOptions bool, enableReading bool, enableFutures bool, enableMargin bool, enableSpotAndMarginTrading bool, tradingAuthorityExpirationTime int64) *InlineResponse20045 {
	this := InlineResponse20045{}
	this.IpRestrict = ipRestrict
	this.CreateTime = createTime
	this.EnableWithdrawals = enableWithdrawals
	this.EnableInternalTransfer = enableInternalTransfer
	this.PermitsUniversalTransfer = permitsUniversalTransfer
	this.EnableVanillaOptions = enableVanillaOptions
	this.EnableReading = enableReading
	this.EnableFutures = enableFutures
	this.EnableMargin = enableMargin
	this.EnableSpotAndMarginTrading = enableSpotAndMarginTrading
	this.TradingAuthorityExpirationTime = tradingAuthorityExpirationTime
	return &this
}

// NewInlineResponse20045WithDefaults instantiates a new InlineResponse20045 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20045WithDefaults() *InlineResponse20045 {
	this := InlineResponse20045{}
	return &this
}

// GetIpRestrict returns the IpRestrict field value
func (o *InlineResponse20045) GetIpRestrict() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IpRestrict
}

// GetIpRestrictOk returns a tuple with the IpRestrict field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetIpRestrictOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpRestrict, true
}

// SetIpRestrict sets field value
func (o *InlineResponse20045) SetIpRestrict(v bool) {
	o.IpRestrict = v
}

// GetCreateTime returns the CreateTime field value
func (o *InlineResponse20045) GetCreateTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetCreateTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateTime, true
}

// SetCreateTime sets field value
func (o *InlineResponse20045) SetCreateTime(v int64) {
	o.CreateTime = v
}

// GetEnableWithdrawals returns the EnableWithdrawals field value
func (o *InlineResponse20045) GetEnableWithdrawals() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableWithdrawals
}

// GetEnableWithdrawalsOk returns a tuple with the EnableWithdrawals field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetEnableWithdrawalsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableWithdrawals, true
}

// SetEnableWithdrawals sets field value
func (o *InlineResponse20045) SetEnableWithdrawals(v bool) {
	o.EnableWithdrawals = v
}

// GetEnableInternalTransfer returns the EnableInternalTransfer field value
func (o *InlineResponse20045) GetEnableInternalTransfer() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableInternalTransfer
}

// GetEnableInternalTransferOk returns a tuple with the EnableInternalTransfer field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetEnableInternalTransferOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableInternalTransfer, true
}

// SetEnableInternalTransfer sets field value
func (o *InlineResponse20045) SetEnableInternalTransfer(v bool) {
	o.EnableInternalTransfer = v
}

// GetPermitsUniversalTransfer returns the PermitsUniversalTransfer field value
func (o *InlineResponse20045) GetPermitsUniversalTransfer() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PermitsUniversalTransfer
}

// GetPermitsUniversalTransferOk returns a tuple with the PermitsUniversalTransfer field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetPermitsUniversalTransferOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PermitsUniversalTransfer, true
}

// SetPermitsUniversalTransfer sets field value
func (o *InlineResponse20045) SetPermitsUniversalTransfer(v bool) {
	o.PermitsUniversalTransfer = v
}

// GetEnableVanillaOptions returns the EnableVanillaOptions field value
func (o *InlineResponse20045) GetEnableVanillaOptions() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableVanillaOptions
}

// GetEnableVanillaOptionsOk returns a tuple with the EnableVanillaOptions field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetEnableVanillaOptionsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableVanillaOptions, true
}

// SetEnableVanillaOptions sets field value
func (o *InlineResponse20045) SetEnableVanillaOptions(v bool) {
	o.EnableVanillaOptions = v
}

// GetEnableReading returns the EnableReading field value
func (o *InlineResponse20045) GetEnableReading() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableReading
}

// GetEnableReadingOk returns a tuple with the EnableReading field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetEnableReadingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableReading, true
}

// SetEnableReading sets field value
func (o *InlineResponse20045) SetEnableReading(v bool) {
	o.EnableReading = v
}

// GetEnableFutures returns the EnableFutures field value
func (o *InlineResponse20045) GetEnableFutures() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableFutures
}

// GetEnableFuturesOk returns a tuple with the EnableFutures field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetEnableFuturesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableFutures, true
}

// SetEnableFutures sets field value
func (o *InlineResponse20045) SetEnableFutures(v bool) {
	o.EnableFutures = v
}

// GetEnableMargin returns the EnableMargin field value
func (o *InlineResponse20045) GetEnableMargin() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableMargin
}

// GetEnableMarginOk returns a tuple with the EnableMargin field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetEnableMarginOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableMargin, true
}

// SetEnableMargin sets field value
func (o *InlineResponse20045) SetEnableMargin(v bool) {
	o.EnableMargin = v
}

// GetEnableSpotAndMarginTrading returns the EnableSpotAndMarginTrading field value
func (o *InlineResponse20045) GetEnableSpotAndMarginTrading() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableSpotAndMarginTrading
}

// GetEnableSpotAndMarginTradingOk returns a tuple with the EnableSpotAndMarginTrading field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetEnableSpotAndMarginTradingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableSpotAndMarginTrading, true
}

// SetEnableSpotAndMarginTrading sets field value
func (o *InlineResponse20045) SetEnableSpotAndMarginTrading(v bool) {
	o.EnableSpotAndMarginTrading = v
}

// GetTradingAuthorityExpirationTime returns the TradingAuthorityExpirationTime field value
func (o *InlineResponse20045) GetTradingAuthorityExpirationTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TradingAuthorityExpirationTime
}

// GetTradingAuthorityExpirationTimeOk returns a tuple with the TradingAuthorityExpirationTime field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetTradingAuthorityExpirationTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TradingAuthorityExpirationTime, true
}

// SetTradingAuthorityExpirationTime sets field value
func (o *InlineResponse20045) SetTradingAuthorityExpirationTime(v int64) {
	o.TradingAuthorityExpirationTime = v
}

func (o InlineResponse20045) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ipRestrict"] = o.IpRestrict
	}
	if true {
		toSerialize["createTime"] = o.CreateTime
	}
	if true {
		toSerialize["enableWithdrawals"] = o.EnableWithdrawals
	}
	if true {
		toSerialize["enableInternalTransfer"] = o.EnableInternalTransfer
	}
	if true {
		toSerialize["permitsUniversalTransfer"] = o.PermitsUniversalTransfer
	}
	if true {
		toSerialize["enableVanillaOptions"] = o.EnableVanillaOptions
	}
	if true {
		toSerialize["enableReading"] = o.EnableReading
	}
	if true {
		toSerialize["enableFutures"] = o.EnableFutures
	}
	if true {
		toSerialize["enableMargin"] = o.EnableMargin
	}
	if true {
		toSerialize["enableSpotAndMarginTrading"] = o.EnableSpotAndMarginTrading
	}
	if true {
		toSerialize["tradingAuthorityExpirationTime"] = o.TradingAuthorityExpirationTime
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20045 struct {
	value *InlineResponse20045
	isSet bool
}

func (v NullableInlineResponse20045) Get() *InlineResponse20045 {
	return v.value
}

func (v *NullableInlineResponse20045) Set(val *InlineResponse20045) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20045) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20045) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20045(val *InlineResponse20045) *NullableInlineResponse20045 {
	return &NullableInlineResponse20045{value: val, isSet: true}
}

func (v NullableInlineResponse20045) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20045) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
