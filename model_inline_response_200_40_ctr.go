/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// InlineResponse20040CTR struct for InlineResponse20040CTR
type InlineResponse20040CTR struct {
	MinWithdrawAmount string `json:"minWithdrawAmount"`
	// deposit status (false if ALL of networks' are false)
	DepositStatus bool `json:"depositStatus"`
	WithdrawFee int64 `json:"withdrawFee"`
	// withdrawStatus status (false if ALL of networks' are false)
	WithdrawStatus bool `json:"withdrawStatus"`
	DepositTip string `json:"depositTip"`
}

// NewInlineResponse20040CTR instantiates a new InlineResponse20040CTR object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20040CTR(minWithdrawAmount string, depositStatus bool, withdrawFee int64, withdrawStatus bool, depositTip string) *InlineResponse20040CTR {
	this := InlineResponse20040CTR{}
	this.MinWithdrawAmount = minWithdrawAmount
	this.DepositStatus = depositStatus
	this.WithdrawFee = withdrawFee
	this.WithdrawStatus = withdrawStatus
	this.DepositTip = depositTip
	return &this
}

// NewInlineResponse20040CTRWithDefaults instantiates a new InlineResponse20040CTR object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20040CTRWithDefaults() *InlineResponse20040CTR {
	this := InlineResponse20040CTR{}
	return &this
}

// GetMinWithdrawAmount returns the MinWithdrawAmount field value
func (o *InlineResponse20040CTR) GetMinWithdrawAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MinWithdrawAmount
}

// GetMinWithdrawAmountOk returns a tuple with the MinWithdrawAmount field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20040CTR) GetMinWithdrawAmountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MinWithdrawAmount, true
}

// SetMinWithdrawAmount sets field value
func (o *InlineResponse20040CTR) SetMinWithdrawAmount(v string) {
	o.MinWithdrawAmount = v
}

// GetDepositStatus returns the DepositStatus field value
func (o *InlineResponse20040CTR) GetDepositStatus() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DepositStatus
}

// GetDepositStatusOk returns a tuple with the DepositStatus field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20040CTR) GetDepositStatusOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DepositStatus, true
}

// SetDepositStatus sets field value
func (o *InlineResponse20040CTR) SetDepositStatus(v bool) {
	o.DepositStatus = v
}

// GetWithdrawFee returns the WithdrawFee field value
func (o *InlineResponse20040CTR) GetWithdrawFee() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.WithdrawFee
}

// GetWithdrawFeeOk returns a tuple with the WithdrawFee field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20040CTR) GetWithdrawFeeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WithdrawFee, true
}

// SetWithdrawFee sets field value
func (o *InlineResponse20040CTR) SetWithdrawFee(v int64) {
	o.WithdrawFee = v
}

// GetWithdrawStatus returns the WithdrawStatus field value
func (o *InlineResponse20040CTR) GetWithdrawStatus() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.WithdrawStatus
}

// GetWithdrawStatusOk returns a tuple with the WithdrawStatus field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20040CTR) GetWithdrawStatusOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WithdrawStatus, true
}

// SetWithdrawStatus sets field value
func (o *InlineResponse20040CTR) SetWithdrawStatus(v bool) {
	o.WithdrawStatus = v
}

// GetDepositTip returns the DepositTip field value
func (o *InlineResponse20040CTR) GetDepositTip() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepositTip
}

// GetDepositTipOk returns a tuple with the DepositTip field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20040CTR) GetDepositTipOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DepositTip, true
}

// SetDepositTip sets field value
func (o *InlineResponse20040CTR) SetDepositTip(v string) {
	o.DepositTip = v
}

func (o InlineResponse20040CTR) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["minWithdrawAmount"] = o.MinWithdrawAmount
	}
	if true {
		toSerialize["depositStatus"] = o.DepositStatus
	}
	if true {
		toSerialize["withdrawFee"] = o.WithdrawFee
	}
	if true {
		toSerialize["withdrawStatus"] = o.WithdrawStatus
	}
	if true {
		toSerialize["depositTip"] = o.DepositTip
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20040CTR struct {
	value *InlineResponse20040CTR
	isSet bool
}

func (v NullableInlineResponse20040CTR) Get() *InlineResponse20040CTR {
	return v.value
}

func (v *NullableInlineResponse20040CTR) Set(val *InlineResponse20040CTR) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20040CTR) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20040CTR) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20040CTR(val *InlineResponse20040CTR) *NullableInlineResponse20040CTR {
	return &NullableInlineResponse20040CTR{value: val, isSet: true}
}

func (v NullableInlineResponse20040CTR) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20040CTR) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


