/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API generated with [binance/binance-api-swagger/blob/master/spot_api.yaml](https://github.com/binance/binance-api-swagger/blob/master/spot_api.yaml) with commit [v1.2.0 release](https://github.com/binance/binance-api-swagger/commit/60d14be031c031600c853d5cdab86db5ab73603e)  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
Contact: qishiwenjun@163.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// BswapLiquidityShare struct for BswapLiquidityShare
type BswapLiquidityShare struct {
	ShareAmount     float64                  `json:"shareAmount"`
	SharePercentage float64                  `json:"sharePercentage"`
	Asset           BswapLiquidityShareAsset `json:"asset"`
}

// NewBswapLiquidityShare instantiates a new BswapLiquidityShare object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBswapLiquidityShare(shareAmount float64, sharePercentage float64, asset BswapLiquidityShareAsset) *BswapLiquidityShare {
	this := BswapLiquidityShare{}
	this.ShareAmount = shareAmount
	this.SharePercentage = sharePercentage
	this.Asset = asset
	return &this
}

// NewBswapLiquidityShareWithDefaults instantiates a new BswapLiquidityShare object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBswapLiquidityShareWithDefaults() *BswapLiquidityShare {
	this := BswapLiquidityShare{}
	return &this
}

// GetShareAmount returns the ShareAmount field value
func (o *BswapLiquidityShare) GetShareAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.ShareAmount
}

// GetShareAmountOk returns a tuple with the ShareAmount field value
// and a boolean to check if the value has been set.
func (o *BswapLiquidityShare) GetShareAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShareAmount, true
}

// SetShareAmount sets field value
func (o *BswapLiquidityShare) SetShareAmount(v float64) {
	o.ShareAmount = v
}

// GetSharePercentage returns the SharePercentage field value
func (o *BswapLiquidityShare) GetSharePercentage() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.SharePercentage
}

// GetSharePercentageOk returns a tuple with the SharePercentage field value
// and a boolean to check if the value has been set.
func (o *BswapLiquidityShare) GetSharePercentageOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SharePercentage, true
}

// SetSharePercentage sets field value
func (o *BswapLiquidityShare) SetSharePercentage(v float64) {
	o.SharePercentage = v
}

// GetAsset returns the Asset field value
func (o *BswapLiquidityShare) GetAsset() BswapLiquidityShareAsset {
	if o == nil {
		var ret BswapLiquidityShareAsset
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *BswapLiquidityShare) GetAssetOk() (*BswapLiquidityShareAsset, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *BswapLiquidityShare) SetAsset(v BswapLiquidityShareAsset) {
	o.Asset = v
}

func (o BswapLiquidityShare) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["shareAmount"] = o.ShareAmount
	}
	if true {
		toSerialize["sharePercentage"] = o.SharePercentage
	}
	if true {
		toSerialize["asset"] = o.Asset
	}
	return json.Marshal(toSerialize)
}

type NullableBswapLiquidityShare struct {
	value *BswapLiquidityShare
	isSet bool
}

func (v NullableBswapLiquidityShare) Get() *BswapLiquidityShare {
	return v.value
}

func (v *NullableBswapLiquidityShare) Set(val *BswapLiquidityShare) {
	v.value = val
	v.isSet = true
}

func (v NullableBswapLiquidityShare) IsSet() bool {
	return v.isSet
}

func (v *NullableBswapLiquidityShare) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBswapLiquidityShare(val *BswapLiquidityShare) *NullableBswapLiquidityShare {
	return &NullableBswapLiquidityShare{value: val, isSet: true}
}

func (v NullableBswapLiquidityShare) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBswapLiquidityShare) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
