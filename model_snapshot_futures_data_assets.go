/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API generated with [binance/binance-api-swagger/blob/master/spot_api.yaml](https://github.com/binance/binance-api-swagger/blob/master/spot_api.yaml) with commit [v1.2.0 release](https://github.com/binance/binance-api-swagger/commit/60d14be031c031600c853d5cdab86db5ab73603e)  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
Contact: qishiwenjun@163.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// SnapshotFuturesDataAssets struct for SnapshotFuturesDataAssets
type SnapshotFuturesDataAssets struct {
	Asset         string `json:"asset"`
	MarginBalance string `json:"marginBalance"`
	WalletBalance string `json:"walletBalance"`
}

// NewSnapshotFuturesDataAssets instantiates a new SnapshotFuturesDataAssets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotFuturesDataAssets(asset string, marginBalance string, walletBalance string) *SnapshotFuturesDataAssets {
	this := SnapshotFuturesDataAssets{}
	this.Asset = asset
	this.MarginBalance = marginBalance
	this.WalletBalance = walletBalance
	return &this
}

// NewSnapshotFuturesDataAssetsWithDefaults instantiates a new SnapshotFuturesDataAssets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotFuturesDataAssetsWithDefaults() *SnapshotFuturesDataAssets {
	this := SnapshotFuturesDataAssets{}
	return &this
}

// GetAsset returns the Asset field value
func (o *SnapshotFuturesDataAssets) GetAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *SnapshotFuturesDataAssets) GetAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *SnapshotFuturesDataAssets) SetAsset(v string) {
	o.Asset = v
}

// GetMarginBalance returns the MarginBalance field value
func (o *SnapshotFuturesDataAssets) GetMarginBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MarginBalance
}

// GetMarginBalanceOk returns a tuple with the MarginBalance field value
// and a boolean to check if the value has been set.
func (o *SnapshotFuturesDataAssets) GetMarginBalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarginBalance, true
}

// SetMarginBalance sets field value
func (o *SnapshotFuturesDataAssets) SetMarginBalance(v string) {
	o.MarginBalance = v
}

// GetWalletBalance returns the WalletBalance field value
func (o *SnapshotFuturesDataAssets) GetWalletBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletBalance
}

// GetWalletBalanceOk returns a tuple with the WalletBalance field value
// and a boolean to check if the value has been set.
func (o *SnapshotFuturesDataAssets) GetWalletBalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletBalance, true
}

// SetWalletBalance sets field value
func (o *SnapshotFuturesDataAssets) SetWalletBalance(v string) {
	o.WalletBalance = v
}

func (o SnapshotFuturesDataAssets) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["asset"] = o.Asset
	}
	if true {
		toSerialize["marginBalance"] = o.MarginBalance
	}
	if true {
		toSerialize["walletBalance"] = o.WalletBalance
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotFuturesDataAssets struct {
	value *SnapshotFuturesDataAssets
	isSet bool
}

func (v NullableSnapshotFuturesDataAssets) Get() *SnapshotFuturesDataAssets {
	return v.value
}

func (v *NullableSnapshotFuturesDataAssets) Set(val *SnapshotFuturesDataAssets) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotFuturesDataAssets) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotFuturesDataAssets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotFuturesDataAssets(val *SnapshotFuturesDataAssets) *NullableSnapshotFuturesDataAssets {
	return &NullableSnapshotFuturesDataAssets{value: val, isSet: true}
}

func (v NullableSnapshotFuturesDataAssets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotFuturesDataAssets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
