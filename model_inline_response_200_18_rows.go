/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20018Rows struct for InlineResponse20018Rows
type InlineResponse20018Rows struct {
	AvgPrice string `json:"avgPrice"`
	ExecutedQty string `json:"executedQty"`
	OrderId int64 `json:"orderId"`
	Price string `json:"price"`
	Qty string `json:"qty"`
	Side string `json:"side"`
	Symbol string `json:"symbol"`
	TimeInForce string `json:"timeInForce"`
	IsIsolated bool `json:"isIsolated"`
	UpdatedTime int64 `json:"updatedTime"`
}

// NewInlineResponse20018Rows instantiates a new InlineResponse20018Rows object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20018Rows(avgPrice string, executedQty string, orderId int64, price string, qty string, side string, symbol string, timeInForce string, isIsolated bool, updatedTime int64) *InlineResponse20018Rows {
	this := InlineResponse20018Rows{}
	this.AvgPrice = avgPrice
	this.ExecutedQty = executedQty
	this.OrderId = orderId
	this.Price = price
	this.Qty = qty
	this.Side = side
	this.Symbol = symbol
	this.TimeInForce = timeInForce
	this.IsIsolated = isIsolated
	this.UpdatedTime = updatedTime
	return &this
}

// NewInlineResponse20018RowsWithDefaults instantiates a new InlineResponse20018Rows object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20018RowsWithDefaults() *InlineResponse20018Rows {
	this := InlineResponse20018Rows{}
	return &this
}

// GetAvgPrice returns the AvgPrice field value
func (o *InlineResponse20018Rows) GetAvgPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AvgPrice
}

// GetAvgPriceOk returns a tuple with the AvgPrice field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Rows) GetAvgPriceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AvgPrice, true
}

// SetAvgPrice sets field value
func (o *InlineResponse20018Rows) SetAvgPrice(v string) {
	o.AvgPrice = v
}

// GetExecutedQty returns the ExecutedQty field value
func (o *InlineResponse20018Rows) GetExecutedQty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExecutedQty
}

// GetExecutedQtyOk returns a tuple with the ExecutedQty field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Rows) GetExecutedQtyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExecutedQty, true
}

// SetExecutedQty sets field value
func (o *InlineResponse20018Rows) SetExecutedQty(v string) {
	o.ExecutedQty = v
}

// GetOrderId returns the OrderId field value
func (o *InlineResponse20018Rows) GetOrderId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Rows) GetOrderIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *InlineResponse20018Rows) SetOrderId(v int64) {
	o.OrderId = v
}

// GetPrice returns the Price field value
func (o *InlineResponse20018Rows) GetPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Rows) GetPriceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *InlineResponse20018Rows) SetPrice(v string) {
	o.Price = v
}

// GetQty returns the Qty field value
func (o *InlineResponse20018Rows) GetQty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Qty
}

// GetQtyOk returns a tuple with the Qty field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Rows) GetQtyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Qty, true
}

// SetQty sets field value
func (o *InlineResponse20018Rows) SetQty(v string) {
	o.Qty = v
}

// GetSide returns the Side field value
func (o *InlineResponse20018Rows) GetSide() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Side
}

// GetSideOk returns a tuple with the Side field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Rows) GetSideOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Side, true
}

// SetSide sets field value
func (o *InlineResponse20018Rows) SetSide(v string) {
	o.Side = v
}

// GetSymbol returns the Symbol field value
func (o *InlineResponse20018Rows) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Rows) GetSymbolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *InlineResponse20018Rows) SetSymbol(v string) {
	o.Symbol = v
}

// GetTimeInForce returns the TimeInForce field value
func (o *InlineResponse20018Rows) GetTimeInForce() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeInForce
}

// GetTimeInForceOk returns a tuple with the TimeInForce field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Rows) GetTimeInForceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TimeInForce, true
}

// SetTimeInForce sets field value
func (o *InlineResponse20018Rows) SetTimeInForce(v string) {
	o.TimeInForce = v
}

// GetIsIsolated returns the IsIsolated field value
func (o *InlineResponse20018Rows) GetIsIsolated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsIsolated
}

// GetIsIsolatedOk returns a tuple with the IsIsolated field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Rows) GetIsIsolatedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsIsolated, true
}

// SetIsIsolated sets field value
func (o *InlineResponse20018Rows) SetIsIsolated(v bool) {
	o.IsIsolated = v
}

// GetUpdatedTime returns the UpdatedTime field value
func (o *InlineResponse20018Rows) GetUpdatedTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20018Rows) GetUpdatedTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedTime, true
}

// SetUpdatedTime sets field value
func (o *InlineResponse20018Rows) SetUpdatedTime(v int64) {
	o.UpdatedTime = v
}

func (o InlineResponse20018Rows) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["avgPrice"] = o.AvgPrice
	}
	if true {
		toSerialize["executedQty"] = o.ExecutedQty
	}
	if true {
		toSerialize["orderId"] = o.OrderId
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if true {
		toSerialize["qty"] = o.Qty
	}
	if true {
		toSerialize["side"] = o.Side
	}
	if true {
		toSerialize["symbol"] = o.Symbol
	}
	if true {
		toSerialize["timeInForce"] = o.TimeInForce
	}
	if true {
		toSerialize["isIsolated"] = o.IsIsolated
	}
	if true {
		toSerialize["updatedTime"] = o.UpdatedTime
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20018Rows struct {
	value *InlineResponse20018Rows
	isSet bool
}

func (v NullableInlineResponse20018Rows) Get() *InlineResponse20018Rows {
	return v.value
}

func (v *NullableInlineResponse20018Rows) Set(val *InlineResponse20018Rows) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20018Rows) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20018Rows) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20018Rows(val *InlineResponse20018Rows) *NullableInlineResponse20018Rows {
	return &NullableInlineResponse20018Rows{value: val, isSet: true}
}

func (v NullableInlineResponse20018Rows) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20018Rows) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


