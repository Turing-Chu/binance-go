/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20095DataProfitToday struct for InlineResponse20095DataProfitToday
type InlineResponse20095DataProfitToday struct {
	BTC string `json:"BTC"`
	BSV string `json:"BSV"`
	BCH string `json:"BCH"`
}

// NewInlineResponse20095DataProfitToday instantiates a new InlineResponse20095DataProfitToday object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20095DataProfitToday(bTC string, bSV string, bCH string) *InlineResponse20095DataProfitToday {
	this := InlineResponse20095DataProfitToday{}
	this.BTC = bTC
	this.BSV = bSV
	this.BCH = bCH
	return &this
}

// NewInlineResponse20095DataProfitTodayWithDefaults instantiates a new InlineResponse20095DataProfitToday object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20095DataProfitTodayWithDefaults() *InlineResponse20095DataProfitToday {
	this := InlineResponse20095DataProfitToday{}
	return &this
}

// GetBTC returns the BTC field value
func (o *InlineResponse20095DataProfitToday) GetBTC() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BTC
}

// GetBTCOk returns a tuple with the BTC field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20095DataProfitToday) GetBTCOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BTC, true
}

// SetBTC sets field value
func (o *InlineResponse20095DataProfitToday) SetBTC(v string) {
	o.BTC = v
}

// GetBSV returns the BSV field value
func (o *InlineResponse20095DataProfitToday) GetBSV() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BSV
}

// GetBSVOk returns a tuple with the BSV field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20095DataProfitToday) GetBSVOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BSV, true
}

// SetBSV sets field value
func (o *InlineResponse20095DataProfitToday) SetBSV(v string) {
	o.BSV = v
}

// GetBCH returns the BCH field value
func (o *InlineResponse20095DataProfitToday) GetBCH() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BCH
}

// GetBCHOk returns a tuple with the BCH field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20095DataProfitToday) GetBCHOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BCH, true
}

// SetBCH sets field value
func (o *InlineResponse20095DataProfitToday) SetBCH(v string) {
	o.BCH = v
}

func (o InlineResponse20095DataProfitToday) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["BTC"] = o.BTC
	}
	if true {
		toSerialize["BSV"] = o.BSV
	}
	if true {
		toSerialize["BCH"] = o.BCH
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20095DataProfitToday struct {
	value *InlineResponse20095DataProfitToday
	isSet bool
}

func (v NullableInlineResponse20095DataProfitToday) Get() *InlineResponse20095DataProfitToday {
	return v.value
}

func (v *NullableInlineResponse20095DataProfitToday) Set(val *InlineResponse20095DataProfitToday) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20095DataProfitToday) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20095DataProfitToday) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20095DataProfitToday(val *InlineResponse20095DataProfitToday) *NullableInlineResponse20095DataProfitToday {
	return &NullableInlineResponse20095DataProfitToday{value: val, isSet: true}
}

func (v NullableInlineResponse20095DataProfitToday) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20095DataProfitToday) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


