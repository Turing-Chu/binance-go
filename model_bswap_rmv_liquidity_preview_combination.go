/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BswapRmvLiquidityPreviewCombination struct for BswapRmvLiquidityPreviewCombination
type BswapRmvLiquidityPreviewCombination struct {
	QuoteAsset string `json:"quoteAsset"`
	BaseAsset string `json:"baseAsset"`
	QuoteAmt int64 `json:"quoteAmt"`
	BaseAmt int64 `json:"baseAmt"`
	Price float64 `json:"price"`
}

// NewBswapRmvLiquidityPreviewCombination instantiates a new BswapRmvLiquidityPreviewCombination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBswapRmvLiquidityPreviewCombination(quoteAsset string, baseAsset string, quoteAmt int64, baseAmt int64, price float64) *BswapRmvLiquidityPreviewCombination {
	this := BswapRmvLiquidityPreviewCombination{}
	this.QuoteAsset = quoteAsset
	this.BaseAsset = baseAsset
	this.QuoteAmt = quoteAmt
	this.BaseAmt = baseAmt
	this.Price = price
	return &this
}

// NewBswapRmvLiquidityPreviewCombinationWithDefaults instantiates a new BswapRmvLiquidityPreviewCombination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBswapRmvLiquidityPreviewCombinationWithDefaults() *BswapRmvLiquidityPreviewCombination {
	this := BswapRmvLiquidityPreviewCombination{}
	return &this
}

// GetQuoteAsset returns the QuoteAsset field value
func (o *BswapRmvLiquidityPreviewCombination) GetQuoteAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteAsset
}

// GetQuoteAssetOk returns a tuple with the QuoteAsset field value
// and a boolean to check if the value has been set.
func (o *BswapRmvLiquidityPreviewCombination) GetQuoteAssetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.QuoteAsset, true
}

// SetQuoteAsset sets field value
func (o *BswapRmvLiquidityPreviewCombination) SetQuoteAsset(v string) {
	o.QuoteAsset = v
}

// GetBaseAsset returns the BaseAsset field value
func (o *BswapRmvLiquidityPreviewCombination) GetBaseAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseAsset
}

// GetBaseAssetOk returns a tuple with the BaseAsset field value
// and a boolean to check if the value has been set.
func (o *BswapRmvLiquidityPreviewCombination) GetBaseAssetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BaseAsset, true
}

// SetBaseAsset sets field value
func (o *BswapRmvLiquidityPreviewCombination) SetBaseAsset(v string) {
	o.BaseAsset = v
}

// GetQuoteAmt returns the QuoteAmt field value
func (o *BswapRmvLiquidityPreviewCombination) GetQuoteAmt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.QuoteAmt
}

// GetQuoteAmtOk returns a tuple with the QuoteAmt field value
// and a boolean to check if the value has been set.
func (o *BswapRmvLiquidityPreviewCombination) GetQuoteAmtOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.QuoteAmt, true
}

// SetQuoteAmt sets field value
func (o *BswapRmvLiquidityPreviewCombination) SetQuoteAmt(v int64) {
	o.QuoteAmt = v
}

// GetBaseAmt returns the BaseAmt field value
func (o *BswapRmvLiquidityPreviewCombination) GetBaseAmt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BaseAmt
}

// GetBaseAmtOk returns a tuple with the BaseAmt field value
// and a boolean to check if the value has been set.
func (o *BswapRmvLiquidityPreviewCombination) GetBaseAmtOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BaseAmt, true
}

// SetBaseAmt sets field value
func (o *BswapRmvLiquidityPreviewCombination) SetBaseAmt(v int64) {
	o.BaseAmt = v
}

// GetPrice returns the Price field value
func (o *BswapRmvLiquidityPreviewCombination) GetPrice() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *BswapRmvLiquidityPreviewCombination) GetPriceOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *BswapRmvLiquidityPreviewCombination) SetPrice(v float64) {
	o.Price = v
}

func (o BswapRmvLiquidityPreviewCombination) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["quoteAsset"] = o.QuoteAsset
	}
	if true {
		toSerialize["baseAsset"] = o.BaseAsset
	}
	if true {
		toSerialize["quoteAmt"] = o.QuoteAmt
	}
	if true {
		toSerialize["baseAmt"] = o.BaseAmt
	}
	if true {
		toSerialize["price"] = o.Price
	}
	return json.Marshal(toSerialize)
}

type NullableBswapRmvLiquidityPreviewCombination struct {
	value *BswapRmvLiquidityPreviewCombination
	isSet bool
}

func (v NullableBswapRmvLiquidityPreviewCombination) Get() *BswapRmvLiquidityPreviewCombination {
	return v.value
}

func (v *NullableBswapRmvLiquidityPreviewCombination) Set(val *BswapRmvLiquidityPreviewCombination) {
	v.value = val
	v.isSet = true
}

func (v NullableBswapRmvLiquidityPreviewCombination) IsSet() bool {
	return v.isSet
}

func (v *NullableBswapRmvLiquidityPreviewCombination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBswapRmvLiquidityPreviewCombination(val *BswapRmvLiquidityPreviewCombination) *NullableBswapRmvLiquidityPreviewCombination {
	return &NullableBswapRmvLiquidityPreviewCombination{value: val, isSet: true}
}

func (v NullableBswapRmvLiquidityPreviewCombination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBswapRmvLiquidityPreviewCombination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


