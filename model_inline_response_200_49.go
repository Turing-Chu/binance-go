/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// InlineResponse20049 struct for InlineResponse20049
type InlineResponse20049 struct {
	Success bool `json:"success"`
	FuturesType int32 `json:"futuresType"`
	Transfers []InlineResponse20049Transfers `json:"transfers"`
}

// NewInlineResponse20049 instantiates a new InlineResponse20049 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20049(success bool, futuresType int32, transfers []InlineResponse20049Transfers) *InlineResponse20049 {
	this := InlineResponse20049{}
	this.Success = success
	this.FuturesType = futuresType
	this.Transfers = transfers
	return &this
}

// NewInlineResponse20049WithDefaults instantiates a new InlineResponse20049 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20049WithDefaults() *InlineResponse20049 {
	this := InlineResponse20049{}
	return &this
}

// GetSuccess returns the Success field value
func (o *InlineResponse20049) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20049) GetSuccessOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *InlineResponse20049) SetSuccess(v bool) {
	o.Success = v
}

// GetFuturesType returns the FuturesType field value
func (o *InlineResponse20049) GetFuturesType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FuturesType
}

// GetFuturesTypeOk returns a tuple with the FuturesType field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20049) GetFuturesTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FuturesType, true
}

// SetFuturesType sets field value
func (o *InlineResponse20049) SetFuturesType(v int32) {
	o.FuturesType = v
}

// GetTransfers returns the Transfers field value
func (o *InlineResponse20049) GetTransfers() []InlineResponse20049Transfers {
	if o == nil {
		var ret []InlineResponse20049Transfers
		return ret
	}

	return o.Transfers
}

// GetTransfersOk returns a tuple with the Transfers field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20049) GetTransfersOk() (*[]InlineResponse20049Transfers, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Transfers, true
}

// SetTransfers sets field value
func (o *InlineResponse20049) SetTransfers(v []InlineResponse20049Transfers) {
	o.Transfers = v
}

func (o InlineResponse20049) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["success"] = o.Success
	}
	if true {
		toSerialize["futuresType"] = o.FuturesType
	}
	if true {
		toSerialize["transfers"] = o.Transfers
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20049 struct {
	value *InlineResponse20049
	isSet bool
}

func (v NullableInlineResponse20049) Get() *InlineResponse20049 {
	return v.value
}

func (v *NullableInlineResponse20049) Set(val *InlineResponse20049) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20049) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20049) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20049(val *InlineResponse20049) *NullableInlineResponse20049 {
	return &NullableInlineResponse20049{value: val, isSet: true}
}

func (v NullableInlineResponse20049) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20049) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


