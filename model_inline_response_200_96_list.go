/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// InlineResponse20096List struct for InlineResponse20096List
type InlineResponse20096List struct {
	Time int64 `json:"time"`
	Hashrate string `json:"hashrate"`
	Reject string `json:"reject"`
}

// NewInlineResponse20096List instantiates a new InlineResponse20096List object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20096List(time int64, hashrate string, reject string) *InlineResponse20096List {
	this := InlineResponse20096List{}
	this.Time = time
	this.Hashrate = hashrate
	this.Reject = reject
	return &this
}

// NewInlineResponse20096ListWithDefaults instantiates a new InlineResponse20096List object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20096ListWithDefaults() *InlineResponse20096List {
	this := InlineResponse20096List{}
	return &this
}

// GetTime returns the Time field value
func (o *InlineResponse20096List) GetTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20096List) GetTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *InlineResponse20096List) SetTime(v int64) {
	o.Time = v
}

// GetHashrate returns the Hashrate field value
func (o *InlineResponse20096List) GetHashrate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hashrate
}

// GetHashrateOk returns a tuple with the Hashrate field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20096List) GetHashrateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Hashrate, true
}

// SetHashrate sets field value
func (o *InlineResponse20096List) SetHashrate(v string) {
	o.Hashrate = v
}

// GetReject returns the Reject field value
func (o *InlineResponse20096List) GetReject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reject
}

// GetRejectOk returns a tuple with the Reject field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20096List) GetRejectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Reject, true
}

// SetReject sets field value
func (o *InlineResponse20096List) SetReject(v string) {
	o.Reject = v
}

func (o InlineResponse20096List) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["time"] = o.Time
	}
	if true {
		toSerialize["hashrate"] = o.Hashrate
	}
	if true {
		toSerialize["reject"] = o.Reject
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20096List struct {
	value *InlineResponse20096List
	isSet bool
}

func (v NullableInlineResponse20096List) Get() *InlineResponse20096List {
	return v.value
}

func (v *NullableInlineResponse20096List) Set(val *InlineResponse20096List) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20096List) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20096List) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20096List(val *InlineResponse20096List) *NullableInlineResponse20096List {
	return &NullableInlineResponse20096List{value: val, isSet: true}
}

func (v NullableInlineResponse20096List) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20096List) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


