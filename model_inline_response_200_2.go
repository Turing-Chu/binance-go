/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API generated with [binance/binance-api-swagger/blob/master/spot_api.yaml](https://github.com/binance/binance-api-swagger/blob/master/spot_api.yaml) with commit [v1.2.0 release](https://github.com/binance/binance-api-swagger/commit/60d14be031c031600c853d5cdab86db5ab73603e)  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
Contact: qishiwenjun@163.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// InlineResponse2002 struct for InlineResponse2002
type InlineResponse2002 struct {
	LastUpdateId int64      `json:"lastUpdateId"`
	Bids         [][]string `json:"bids"`
	Asks         [][]string `json:"asks"`
}

// NewInlineResponse2002 instantiates a new InlineResponse2002 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2002(lastUpdateId int64, bids [][]string, asks [][]string) *InlineResponse2002 {
	this := InlineResponse2002{}
	this.LastUpdateId = lastUpdateId
	this.Bids = bids
	this.Asks = asks
	return &this
}

// NewInlineResponse2002WithDefaults instantiates a new InlineResponse2002 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2002WithDefaults() *InlineResponse2002 {
	this := InlineResponse2002{}
	return &this
}

// GetLastUpdateId returns the LastUpdateId field value
func (o *InlineResponse2002) GetLastUpdateId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastUpdateId
}

// GetLastUpdateIdOk returns a tuple with the LastUpdateId field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetLastUpdateIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdateId, true
}

// SetLastUpdateId sets field value
func (o *InlineResponse2002) SetLastUpdateId(v int64) {
	o.LastUpdateId = v
}

// GetBids returns the Bids field value
func (o *InlineResponse2002) GetBids() [][]string {
	if o == nil {
		var ret [][]string
		return ret
	}

	return o.Bids
}

// GetBidsOk returns a tuple with the Bids field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetBidsOk() (*[][]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bids, true
}

// SetBids sets field value
func (o *InlineResponse2002) SetBids(v [][]string) {
	o.Bids = v
}

// GetAsks returns the Asks field value
func (o *InlineResponse2002) GetAsks() [][]string {
	if o == nil {
		var ret [][]string
		return ret
	}

	return o.Asks
}

// GetAsksOk returns a tuple with the Asks field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetAsksOk() (*[][]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asks, true
}

// SetAsks sets field value
func (o *InlineResponse2002) SetAsks(v [][]string) {
	o.Asks = v
}

func (o InlineResponse2002) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["lastUpdateId"] = o.LastUpdateId
	}
	if true {
		toSerialize["bids"] = o.Bids
	}
	if true {
		toSerialize["asks"] = o.Asks
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2002 struct {
	value *InlineResponse2002
	isSet bool
}

func (v NullableInlineResponse2002) Get() *InlineResponse2002 {
	return v.value
}

func (v *NullableInlineResponse2002) Set(val *InlineResponse2002) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2002) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2002) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2002(val *InlineResponse2002) *NullableInlineResponse2002 {
	return &NullableInlineResponse2002{value: val, isSet: true}
}

func (v NullableInlineResponse2002) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2002) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
