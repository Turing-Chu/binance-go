/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API generated with [binance/binance-api-swagger/blob/master/spot_api.yaml](https://github.com/binance/binance-api-swagger/blob/master/spot_api.yaml) with commit [v1.2.0 release](https://github.com/binance/binance-api-swagger/commit/60d14be031c031600c853d5cdab86db5ab73603e)  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
Contact: qishiwenjun@163.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// MyTrade struct for MyTrade
type MyTrade struct {
	Symbol string `json:"symbol"`
	// Trade id
	Id          int64 `json:"id"`
	OrderId     int64 `json:"orderId"`
	OrderListId int64 `json:"orderListId"`
	// Price
	Price string `json:"price"`
	// Amount of base asset
	Qty string `json:"qty"`
	// Amount of quote asset
	QuoteQty        string `json:"quoteQty"`
	Commission      string `json:"commission"`
	CommissionAsset string `json:"commissionAsset"`
	// Trade timestamp
	Time        int64 `json:"time"`
	IsBuyer     bool  `json:"isBuyer"`
	IsMaker     bool  `json:"isMaker"`
	IsBestMatch bool  `json:"isBestMatch"`
}

// NewMyTrade instantiates a new MyTrade object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMyTrade(symbol string, id int64, orderId int64, orderListId int64, price string, qty string, quoteQty string, commission string, commissionAsset string, time int64, isBuyer bool, isMaker bool, isBestMatch bool) *MyTrade {
	this := MyTrade{}
	this.Symbol = symbol
	this.Id = id
	this.OrderId = orderId
	this.OrderListId = orderListId
	this.Price = price
	this.Qty = qty
	this.QuoteQty = quoteQty
	this.Commission = commission
	this.CommissionAsset = commissionAsset
	this.Time = time
	this.IsBuyer = isBuyer
	this.IsMaker = isMaker
	this.IsBestMatch = isBestMatch
	return &this
}

// NewMyTradeWithDefaults instantiates a new MyTrade object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMyTradeWithDefaults() *MyTrade {
	this := MyTrade{}
	return &this
}

// GetSymbol returns the Symbol field value
func (o *MyTrade) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *MyTrade) SetSymbol(v string) {
	o.Symbol = v
}

// GetId returns the Id field value
func (o *MyTrade) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MyTrade) SetId(v int64) {
	o.Id = v
}

// GetOrderId returns the OrderId field value
func (o *MyTrade) GetOrderId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetOrderIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *MyTrade) SetOrderId(v int64) {
	o.OrderId = v
}

// GetOrderListId returns the OrderListId field value
func (o *MyTrade) GetOrderListId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OrderListId
}

// GetOrderListIdOk returns a tuple with the OrderListId field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetOrderListIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderListId, true
}

// SetOrderListId sets field value
func (o *MyTrade) SetOrderListId(v int64) {
	o.OrderListId = v
}

// GetPrice returns the Price field value
func (o *MyTrade) GetPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *MyTrade) SetPrice(v string) {
	o.Price = v
}

// GetQty returns the Qty field value
func (o *MyTrade) GetQty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Qty
}

// GetQtyOk returns a tuple with the Qty field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetQtyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Qty, true
}

// SetQty sets field value
func (o *MyTrade) SetQty(v string) {
	o.Qty = v
}

// GetQuoteQty returns the QuoteQty field value
func (o *MyTrade) GetQuoteQty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteQty
}

// GetQuoteQtyOk returns a tuple with the QuoteQty field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetQuoteQtyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteQty, true
}

// SetQuoteQty sets field value
func (o *MyTrade) SetQuoteQty(v string) {
	o.QuoteQty = v
}

// GetCommission returns the Commission field value
func (o *MyTrade) GetCommission() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Commission
}

// GetCommissionOk returns a tuple with the Commission field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetCommissionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Commission, true
}

// SetCommission sets field value
func (o *MyTrade) SetCommission(v string) {
	o.Commission = v
}

// GetCommissionAsset returns the CommissionAsset field value
func (o *MyTrade) GetCommissionAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommissionAsset
}

// GetCommissionAssetOk returns a tuple with the CommissionAsset field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetCommissionAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommissionAsset, true
}

// SetCommissionAsset sets field value
func (o *MyTrade) SetCommissionAsset(v string) {
	o.CommissionAsset = v
}

// GetTime returns the Time field value
func (o *MyTrade) GetTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *MyTrade) SetTime(v int64) {
	o.Time = v
}

// GetIsBuyer returns the IsBuyer field value
func (o *MyTrade) GetIsBuyer() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBuyer
}

// GetIsBuyerOk returns a tuple with the IsBuyer field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetIsBuyerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsBuyer, true
}

// SetIsBuyer sets field value
func (o *MyTrade) SetIsBuyer(v bool) {
	o.IsBuyer = v
}

// GetIsMaker returns the IsMaker field value
func (o *MyTrade) GetIsMaker() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsMaker
}

// GetIsMakerOk returns a tuple with the IsMaker field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetIsMakerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsMaker, true
}

// SetIsMaker sets field value
func (o *MyTrade) SetIsMaker(v bool) {
	o.IsMaker = v
}

// GetIsBestMatch returns the IsBestMatch field value
func (o *MyTrade) GetIsBestMatch() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBestMatch
}

// GetIsBestMatchOk returns a tuple with the IsBestMatch field value
// and a boolean to check if the value has been set.
func (o *MyTrade) GetIsBestMatchOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsBestMatch, true
}

// SetIsBestMatch sets field value
func (o *MyTrade) SetIsBestMatch(v bool) {
	o.IsBestMatch = v
}

func (o MyTrade) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["symbol"] = o.Symbol
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["orderId"] = o.OrderId
	}
	if true {
		toSerialize["orderListId"] = o.OrderListId
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if true {
		toSerialize["qty"] = o.Qty
	}
	if true {
		toSerialize["quoteQty"] = o.QuoteQty
	}
	if true {
		toSerialize["commission"] = o.Commission
	}
	if true {
		toSerialize["commissionAsset"] = o.CommissionAsset
	}
	if true {
		toSerialize["time"] = o.Time
	}
	if true {
		toSerialize["isBuyer"] = o.IsBuyer
	}
	if true {
		toSerialize["isMaker"] = o.IsMaker
	}
	if true {
		toSerialize["isBestMatch"] = o.IsBestMatch
	}
	return json.Marshal(toSerialize)
}

type NullableMyTrade struct {
	value *MyTrade
	isSet bool
}

func (v NullableMyTrade) Get() *MyTrade {
	return v.value
}

func (v *NullableMyTrade) Set(val *MyTrade) {
	v.value = val
	v.isSet = true
}

func (v NullableMyTrade) IsSet() bool {
	return v.isSet
}

func (v *NullableMyTrade) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMyTrade(val *MyTrade) *NullableMyTrade {
	return &NullableMyTrade{value: val, isSet: true}
}

func (v NullableMyTrade) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMyTrade) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
