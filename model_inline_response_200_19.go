/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20019 struct for InlineResponse20019
type InlineResponse20019 struct {
	BorrowEnabled bool `json:"borrowEnabled"`
	MarginLevel string `json:"marginLevel"`
	TotalAssetOfBtc string `json:"totalAssetOfBtc"`
	TotalLiabilityOfBtc string `json:"totalLiabilityOfBtc"`
	TotalNetAssetOfBtc string `json:"totalNetAssetOfBtc"`
	TradeEnabled bool `json:"tradeEnabled"`
	TransferEnabled bool `json:"transferEnabled"`
	UserAssets []InlineResponse20019UserAssets `json:"userAssets"`
}

// NewInlineResponse20019 instantiates a new InlineResponse20019 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20019(borrowEnabled bool, marginLevel string, totalAssetOfBtc string, totalLiabilityOfBtc string, totalNetAssetOfBtc string, tradeEnabled bool, transferEnabled bool, userAssets []InlineResponse20019UserAssets) *InlineResponse20019 {
	this := InlineResponse20019{}
	this.BorrowEnabled = borrowEnabled
	this.MarginLevel = marginLevel
	this.TotalAssetOfBtc = totalAssetOfBtc
	this.TotalLiabilityOfBtc = totalLiabilityOfBtc
	this.TotalNetAssetOfBtc = totalNetAssetOfBtc
	this.TradeEnabled = tradeEnabled
	this.TransferEnabled = transferEnabled
	this.UserAssets = userAssets
	return &this
}

// NewInlineResponse20019WithDefaults instantiates a new InlineResponse20019 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20019WithDefaults() *InlineResponse20019 {
	this := InlineResponse20019{}
	return &this
}

// GetBorrowEnabled returns the BorrowEnabled field value
func (o *InlineResponse20019) GetBorrowEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BorrowEnabled
}

// GetBorrowEnabledOk returns a tuple with the BorrowEnabled field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetBorrowEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BorrowEnabled, true
}

// SetBorrowEnabled sets field value
func (o *InlineResponse20019) SetBorrowEnabled(v bool) {
	o.BorrowEnabled = v
}

// GetMarginLevel returns the MarginLevel field value
func (o *InlineResponse20019) GetMarginLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MarginLevel
}

// GetMarginLevelOk returns a tuple with the MarginLevel field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetMarginLevelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MarginLevel, true
}

// SetMarginLevel sets field value
func (o *InlineResponse20019) SetMarginLevel(v string) {
	o.MarginLevel = v
}

// GetTotalAssetOfBtc returns the TotalAssetOfBtc field value
func (o *InlineResponse20019) GetTotalAssetOfBtc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalAssetOfBtc
}

// GetTotalAssetOfBtcOk returns a tuple with the TotalAssetOfBtc field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetTotalAssetOfBtcOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalAssetOfBtc, true
}

// SetTotalAssetOfBtc sets field value
func (o *InlineResponse20019) SetTotalAssetOfBtc(v string) {
	o.TotalAssetOfBtc = v
}

// GetTotalLiabilityOfBtc returns the TotalLiabilityOfBtc field value
func (o *InlineResponse20019) GetTotalLiabilityOfBtc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalLiabilityOfBtc
}

// GetTotalLiabilityOfBtcOk returns a tuple with the TotalLiabilityOfBtc field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetTotalLiabilityOfBtcOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalLiabilityOfBtc, true
}

// SetTotalLiabilityOfBtc sets field value
func (o *InlineResponse20019) SetTotalLiabilityOfBtc(v string) {
	o.TotalLiabilityOfBtc = v
}

// GetTotalNetAssetOfBtc returns the TotalNetAssetOfBtc field value
func (o *InlineResponse20019) GetTotalNetAssetOfBtc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalNetAssetOfBtc
}

// GetTotalNetAssetOfBtcOk returns a tuple with the TotalNetAssetOfBtc field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetTotalNetAssetOfBtcOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalNetAssetOfBtc, true
}

// SetTotalNetAssetOfBtc sets field value
func (o *InlineResponse20019) SetTotalNetAssetOfBtc(v string) {
	o.TotalNetAssetOfBtc = v
}

// GetTradeEnabled returns the TradeEnabled field value
func (o *InlineResponse20019) GetTradeEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TradeEnabled
}

// GetTradeEnabledOk returns a tuple with the TradeEnabled field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetTradeEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TradeEnabled, true
}

// SetTradeEnabled sets field value
func (o *InlineResponse20019) SetTradeEnabled(v bool) {
	o.TradeEnabled = v
}

// GetTransferEnabled returns the TransferEnabled field value
func (o *InlineResponse20019) GetTransferEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TransferEnabled
}

// GetTransferEnabledOk returns a tuple with the TransferEnabled field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetTransferEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransferEnabled, true
}

// SetTransferEnabled sets field value
func (o *InlineResponse20019) SetTransferEnabled(v bool) {
	o.TransferEnabled = v
}

// GetUserAssets returns the UserAssets field value
func (o *InlineResponse20019) GetUserAssets() []InlineResponse20019UserAssets {
	if o == nil {
		var ret []InlineResponse20019UserAssets
		return ret
	}

	return o.UserAssets
}

// GetUserAssetsOk returns a tuple with the UserAssets field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetUserAssetsOk() (*[]InlineResponse20019UserAssets, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserAssets, true
}

// SetUserAssets sets field value
func (o *InlineResponse20019) SetUserAssets(v []InlineResponse20019UserAssets) {
	o.UserAssets = v
}

func (o InlineResponse20019) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["borrowEnabled"] = o.BorrowEnabled
	}
	if true {
		toSerialize["marginLevel"] = o.MarginLevel
	}
	if true {
		toSerialize["totalAssetOfBtc"] = o.TotalAssetOfBtc
	}
	if true {
		toSerialize["totalLiabilityOfBtc"] = o.TotalLiabilityOfBtc
	}
	if true {
		toSerialize["totalNetAssetOfBtc"] = o.TotalNetAssetOfBtc
	}
	if true {
		toSerialize["tradeEnabled"] = o.TradeEnabled
	}
	if true {
		toSerialize["transferEnabled"] = o.TransferEnabled
	}
	if true {
		toSerialize["userAssets"] = o.UserAssets
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20019 struct {
	value *InlineResponse20019
	isSet bool
}

func (v NullableInlineResponse20019) Get() *InlineResponse20019 {
	return v.value
}

func (v *NullableInlineResponse20019) Set(val *InlineResponse20019) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20019) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20019) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20019(val *InlineResponse20019) *NullableInlineResponse20019 {
	return &NullableInlineResponse20019{value: val, isSet: true}
}

func (v NullableInlineResponse20019) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20019) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


