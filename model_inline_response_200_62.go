/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20062 struct for InlineResponse20062
type InlineResponse20062 struct {
	EntryPrice string `json:"entryPrice"`
	// current initial leverage
	Leverage string `json:"leverage"`
	// notional value limit of current initial leverage
	MaxNotional string `json:"maxNotional"`
	LiquidationPrice string `json:"liquidationPrice"`
	MarkPrice string `json:"markPrice"`
	PositionAmount string `json:"positionAmount"`
	Symbol string `json:"symbol"`
	UnrealizedProfit string `json:"unrealizedProfit"`
}

// NewInlineResponse20062 instantiates a new InlineResponse20062 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20062(entryPrice string, leverage string, maxNotional string, liquidationPrice string, markPrice string, positionAmount string, symbol string, unrealizedProfit string) *InlineResponse20062 {
	this := InlineResponse20062{}
	this.EntryPrice = entryPrice
	this.Leverage = leverage
	this.MaxNotional = maxNotional
	this.LiquidationPrice = liquidationPrice
	this.MarkPrice = markPrice
	this.PositionAmount = positionAmount
	this.Symbol = symbol
	this.UnrealizedProfit = unrealizedProfit
	return &this
}

// NewInlineResponse20062WithDefaults instantiates a new InlineResponse20062 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20062WithDefaults() *InlineResponse20062 {
	this := InlineResponse20062{}
	return &this
}

// GetEntryPrice returns the EntryPrice field value
func (o *InlineResponse20062) GetEntryPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryPrice
}

// GetEntryPriceOk returns a tuple with the EntryPrice field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20062) GetEntryPriceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EntryPrice, true
}

// SetEntryPrice sets field value
func (o *InlineResponse20062) SetEntryPrice(v string) {
	o.EntryPrice = v
}

// GetLeverage returns the Leverage field value
func (o *InlineResponse20062) GetLeverage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Leverage
}

// GetLeverageOk returns a tuple with the Leverage field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20062) GetLeverageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Leverage, true
}

// SetLeverage sets field value
func (o *InlineResponse20062) SetLeverage(v string) {
	o.Leverage = v
}

// GetMaxNotional returns the MaxNotional field value
func (o *InlineResponse20062) GetMaxNotional() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxNotional
}

// GetMaxNotionalOk returns a tuple with the MaxNotional field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20062) GetMaxNotionalOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MaxNotional, true
}

// SetMaxNotional sets field value
func (o *InlineResponse20062) SetMaxNotional(v string) {
	o.MaxNotional = v
}

// GetLiquidationPrice returns the LiquidationPrice field value
func (o *InlineResponse20062) GetLiquidationPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LiquidationPrice
}

// GetLiquidationPriceOk returns a tuple with the LiquidationPrice field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20062) GetLiquidationPriceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LiquidationPrice, true
}

// SetLiquidationPrice sets field value
func (o *InlineResponse20062) SetLiquidationPrice(v string) {
	o.LiquidationPrice = v
}

// GetMarkPrice returns the MarkPrice field value
func (o *InlineResponse20062) GetMarkPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MarkPrice
}

// GetMarkPriceOk returns a tuple with the MarkPrice field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20062) GetMarkPriceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MarkPrice, true
}

// SetMarkPrice sets field value
func (o *InlineResponse20062) SetMarkPrice(v string) {
	o.MarkPrice = v
}

// GetPositionAmount returns the PositionAmount field value
func (o *InlineResponse20062) GetPositionAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PositionAmount
}

// GetPositionAmountOk returns a tuple with the PositionAmount field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20062) GetPositionAmountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PositionAmount, true
}

// SetPositionAmount sets field value
func (o *InlineResponse20062) SetPositionAmount(v string) {
	o.PositionAmount = v
}

// GetSymbol returns the Symbol field value
func (o *InlineResponse20062) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20062) GetSymbolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *InlineResponse20062) SetSymbol(v string) {
	o.Symbol = v
}

// GetUnrealizedProfit returns the UnrealizedProfit field value
func (o *InlineResponse20062) GetUnrealizedProfit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnrealizedProfit
}

// GetUnrealizedProfitOk returns a tuple with the UnrealizedProfit field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20062) GetUnrealizedProfitOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UnrealizedProfit, true
}

// SetUnrealizedProfit sets field value
func (o *InlineResponse20062) SetUnrealizedProfit(v string) {
	o.UnrealizedProfit = v
}

func (o InlineResponse20062) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entryPrice"] = o.EntryPrice
	}
	if true {
		toSerialize["leverage"] = o.Leverage
	}
	if true {
		toSerialize["maxNotional"] = o.MaxNotional
	}
	if true {
		toSerialize["liquidationPrice"] = o.LiquidationPrice
	}
	if true {
		toSerialize["markPrice"] = o.MarkPrice
	}
	if true {
		toSerialize["positionAmount"] = o.PositionAmount
	}
	if true {
		toSerialize["symbol"] = o.Symbol
	}
	if true {
		toSerialize["unrealizedProfit"] = o.UnrealizedProfit
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20062 struct {
	value *InlineResponse20062
	isSet bool
}

func (v NullableInlineResponse20062) Get() *InlineResponse20062 {
	return v.value
}

func (v *NullableInlineResponse20062) Set(val *InlineResponse20062) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20062) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20062) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20062(val *InlineResponse20062) *NullableInlineResponse20062 {
	return &NullableInlineResponse20062{value: val, isSet: true}
}

func (v NullableInlineResponse20062) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20062) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


