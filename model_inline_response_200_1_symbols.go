/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API generated with [binance/binance-api-swagger/blob/master/spot_api.yaml](https://github.com/binance/binance-api-swagger/blob/master/spot_api.yaml) with commit [v1.2.0 release](https://github.com/binance/binance-api-swagger/commit/60d14be031c031600c853d5cdab86db5ab73603e)  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
Contact: qishiwenjun@163.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binanceapi

import (
	"encoding/json"
)

// InlineResponse2001Symbols struct for InlineResponse2001Symbols
type InlineResponse2001Symbols struct {
	Symbol                     string                      `json:"symbol"`
	Status                     string                      `json:"status"`
	BaseAsset                  string                      `json:"baseAsset"`
	BaseAssetPrecision         int32                       `json:"baseAssetPrecision"`
	QuoteAsset                 string                      `json:"quoteAsset"`
	QuoteAssetPrecision        int32                       `json:"quoteAssetPrecision"`
	BaseCommissionPrecision    int32                       `json:"baseCommissionPrecision"`
	QuoteCommissionPrecision   int32                       `json:"quoteCommissionPrecision"`
	OrderTypes                 []string                    `json:"orderTypes"`
	IcebergAllowed             bool                        `json:"icebergAllowed"`
	OcoAllowed                 bool                        `json:"ocoAllowed"`
	QuoteOrderQtyMarketAllowed bool                        `json:"quoteOrderQtyMarketAllowed"`
	IsSpotTradingAllowed       bool                        `json:"isSpotTradingAllowed"`
	IsMarginTradingAllowed     bool                        `json:"isMarginTradingAllowed"`
	Filters                    []InlineResponse2001Filters `json:"filters"`
	Permissions                []string                    `json:"permissions"`
}

// NewInlineResponse2001Symbols instantiates a new InlineResponse2001Symbols object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2001Symbols(symbol string, status string, baseAsset string, baseAssetPrecision int32, quoteAsset string, quoteAssetPrecision int32, baseCommissionPrecision int32, quoteCommissionPrecision int32, orderTypes []string, icebergAllowed bool, ocoAllowed bool, quoteOrderQtyMarketAllowed bool, isSpotTradingAllowed bool, isMarginTradingAllowed bool, filters []InlineResponse2001Filters, permissions []string) *InlineResponse2001Symbols {
	this := InlineResponse2001Symbols{}
	this.Symbol = symbol
	this.Status = status
	this.BaseAsset = baseAsset
	this.BaseAssetPrecision = baseAssetPrecision
	this.QuoteAsset = quoteAsset
	this.QuoteAssetPrecision = quoteAssetPrecision
	this.BaseCommissionPrecision = baseCommissionPrecision
	this.QuoteCommissionPrecision = quoteCommissionPrecision
	this.OrderTypes = orderTypes
	this.IcebergAllowed = icebergAllowed
	this.OcoAllowed = ocoAllowed
	this.QuoteOrderQtyMarketAllowed = quoteOrderQtyMarketAllowed
	this.IsSpotTradingAllowed = isSpotTradingAllowed
	this.IsMarginTradingAllowed = isMarginTradingAllowed
	this.Filters = filters
	this.Permissions = permissions
	return &this
}

// NewInlineResponse2001SymbolsWithDefaults instantiates a new InlineResponse2001Symbols object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2001SymbolsWithDefaults() *InlineResponse2001Symbols {
	this := InlineResponse2001Symbols{}
	return &this
}

// GetSymbol returns the Symbol field value
func (o *InlineResponse2001Symbols) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *InlineResponse2001Symbols) SetSymbol(v string) {
	o.Symbol = v
}

// GetStatus returns the Status field value
func (o *InlineResponse2001Symbols) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InlineResponse2001Symbols) SetStatus(v string) {
	o.Status = v
}

// GetBaseAsset returns the BaseAsset field value
func (o *InlineResponse2001Symbols) GetBaseAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseAsset
}

// GetBaseAssetOk returns a tuple with the BaseAsset field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetBaseAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseAsset, true
}

// SetBaseAsset sets field value
func (o *InlineResponse2001Symbols) SetBaseAsset(v string) {
	o.BaseAsset = v
}

// GetBaseAssetPrecision returns the BaseAssetPrecision field value
func (o *InlineResponse2001Symbols) GetBaseAssetPrecision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BaseAssetPrecision
}

// GetBaseAssetPrecisionOk returns a tuple with the BaseAssetPrecision field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetBaseAssetPrecisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseAssetPrecision, true
}

// SetBaseAssetPrecision sets field value
func (o *InlineResponse2001Symbols) SetBaseAssetPrecision(v int32) {
	o.BaseAssetPrecision = v
}

// GetQuoteAsset returns the QuoteAsset field value
func (o *InlineResponse2001Symbols) GetQuoteAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteAsset
}

// GetQuoteAssetOk returns a tuple with the QuoteAsset field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetQuoteAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteAsset, true
}

// SetQuoteAsset sets field value
func (o *InlineResponse2001Symbols) SetQuoteAsset(v string) {
	o.QuoteAsset = v
}

// GetQuoteAssetPrecision returns the QuoteAssetPrecision field value
func (o *InlineResponse2001Symbols) GetQuoteAssetPrecision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.QuoteAssetPrecision
}

// GetQuoteAssetPrecisionOk returns a tuple with the QuoteAssetPrecision field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetQuoteAssetPrecisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteAssetPrecision, true
}

// SetQuoteAssetPrecision sets field value
func (o *InlineResponse2001Symbols) SetQuoteAssetPrecision(v int32) {
	o.QuoteAssetPrecision = v
}

// GetBaseCommissionPrecision returns the BaseCommissionPrecision field value
func (o *InlineResponse2001Symbols) GetBaseCommissionPrecision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BaseCommissionPrecision
}

// GetBaseCommissionPrecisionOk returns a tuple with the BaseCommissionPrecision field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetBaseCommissionPrecisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseCommissionPrecision, true
}

// SetBaseCommissionPrecision sets field value
func (o *InlineResponse2001Symbols) SetBaseCommissionPrecision(v int32) {
	o.BaseCommissionPrecision = v
}

// GetQuoteCommissionPrecision returns the QuoteCommissionPrecision field value
func (o *InlineResponse2001Symbols) GetQuoteCommissionPrecision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.QuoteCommissionPrecision
}

// GetQuoteCommissionPrecisionOk returns a tuple with the QuoteCommissionPrecision field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetQuoteCommissionPrecisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteCommissionPrecision, true
}

// SetQuoteCommissionPrecision sets field value
func (o *InlineResponse2001Symbols) SetQuoteCommissionPrecision(v int32) {
	o.QuoteCommissionPrecision = v
}

// GetOrderTypes returns the OrderTypes field value
func (o *InlineResponse2001Symbols) GetOrderTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OrderTypes
}

// GetOrderTypesOk returns a tuple with the OrderTypes field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetOrderTypesOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderTypes, true
}

// SetOrderTypes sets field value
func (o *InlineResponse2001Symbols) SetOrderTypes(v []string) {
	o.OrderTypes = v
}

// GetIcebergAllowed returns the IcebergAllowed field value
func (o *InlineResponse2001Symbols) GetIcebergAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IcebergAllowed
}

// GetIcebergAllowedOk returns a tuple with the IcebergAllowed field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetIcebergAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IcebergAllowed, true
}

// SetIcebergAllowed sets field value
func (o *InlineResponse2001Symbols) SetIcebergAllowed(v bool) {
	o.IcebergAllowed = v
}

// GetOcoAllowed returns the OcoAllowed field value
func (o *InlineResponse2001Symbols) GetOcoAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OcoAllowed
}

// GetOcoAllowedOk returns a tuple with the OcoAllowed field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetOcoAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OcoAllowed, true
}

// SetOcoAllowed sets field value
func (o *InlineResponse2001Symbols) SetOcoAllowed(v bool) {
	o.OcoAllowed = v
}

// GetQuoteOrderQtyMarketAllowed returns the QuoteOrderQtyMarketAllowed field value
func (o *InlineResponse2001Symbols) GetQuoteOrderQtyMarketAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.QuoteOrderQtyMarketAllowed
}

// GetQuoteOrderQtyMarketAllowedOk returns a tuple with the QuoteOrderQtyMarketAllowed field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetQuoteOrderQtyMarketAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteOrderQtyMarketAllowed, true
}

// SetQuoteOrderQtyMarketAllowed sets field value
func (o *InlineResponse2001Symbols) SetQuoteOrderQtyMarketAllowed(v bool) {
	o.QuoteOrderQtyMarketAllowed = v
}

// GetIsSpotTradingAllowed returns the IsSpotTradingAllowed field value
func (o *InlineResponse2001Symbols) GetIsSpotTradingAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSpotTradingAllowed
}

// GetIsSpotTradingAllowedOk returns a tuple with the IsSpotTradingAllowed field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetIsSpotTradingAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSpotTradingAllowed, true
}

// SetIsSpotTradingAllowed sets field value
func (o *InlineResponse2001Symbols) SetIsSpotTradingAllowed(v bool) {
	o.IsSpotTradingAllowed = v
}

// GetIsMarginTradingAllowed returns the IsMarginTradingAllowed field value
func (o *InlineResponse2001Symbols) GetIsMarginTradingAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsMarginTradingAllowed
}

// GetIsMarginTradingAllowedOk returns a tuple with the IsMarginTradingAllowed field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetIsMarginTradingAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsMarginTradingAllowed, true
}

// SetIsMarginTradingAllowed sets field value
func (o *InlineResponse2001Symbols) SetIsMarginTradingAllowed(v bool) {
	o.IsMarginTradingAllowed = v
}

// GetFilters returns the Filters field value
func (o *InlineResponse2001Symbols) GetFilters() []InlineResponse2001Filters {
	if o == nil {
		var ret []InlineResponse2001Filters
		return ret
	}

	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetFiltersOk() (*[]InlineResponse2001Filters, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filters, true
}

// SetFilters sets field value
func (o *InlineResponse2001Symbols) SetFilters(v []InlineResponse2001Filters) {
	o.Filters = v
}

// GetPermissions returns the Permissions field value
func (o *InlineResponse2001Symbols) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetPermissionsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// SetPermissions sets field value
func (o *InlineResponse2001Symbols) SetPermissions(v []string) {
	o.Permissions = v
}

func (o InlineResponse2001Symbols) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["symbol"] = o.Symbol
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["baseAsset"] = o.BaseAsset
	}
	if true {
		toSerialize["baseAssetPrecision"] = o.BaseAssetPrecision
	}
	if true {
		toSerialize["quoteAsset"] = o.QuoteAsset
	}
	if true {
		toSerialize["quoteAssetPrecision"] = o.QuoteAssetPrecision
	}
	if true {
		toSerialize["baseCommissionPrecision"] = o.BaseCommissionPrecision
	}
	if true {
		toSerialize["quoteCommissionPrecision"] = o.QuoteCommissionPrecision
	}
	if true {
		toSerialize["orderTypes"] = o.OrderTypes
	}
	if true {
		toSerialize["icebergAllowed"] = o.IcebergAllowed
	}
	if true {
		toSerialize["ocoAllowed"] = o.OcoAllowed
	}
	if true {
		toSerialize["quoteOrderQtyMarketAllowed"] = o.QuoteOrderQtyMarketAllowed
	}
	if true {
		toSerialize["isSpotTradingAllowed"] = o.IsSpotTradingAllowed
	}
	if true {
		toSerialize["isMarginTradingAllowed"] = o.IsMarginTradingAllowed
	}
	if true {
		toSerialize["filters"] = o.Filters
	}
	if true {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2001Symbols struct {
	value *InlineResponse2001Symbols
	isSet bool
}

func (v NullableInlineResponse2001Symbols) Get() *InlineResponse2001Symbols {
	return v.value
}

func (v *NullableInlineResponse2001Symbols) Set(val *InlineResponse2001Symbols) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2001Symbols) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2001Symbols) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2001Symbols(val *InlineResponse2001Symbols) *NullableInlineResponse2001Symbols {
	return &NullableInlineResponse2001Symbols{value: val, isSet: true}
}

func (v NullableInlineResponse2001Symbols) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2001Symbols) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
