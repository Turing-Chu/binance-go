/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20036Data struct for InlineResponse20036Data
type InlineResponse20036Data struct {
	// API trading function is locked or not
	IsLocked bool `json:"isLocked"`
	// If API trading function is locked, this is the planned recover time
	PlannedRecoverTime int64 `json:"plannedRecoverTime"`
	TriggerCondition InlineResponse20036DataTriggerCondition `json:"triggerCondition"`
	Indicators InlineResponse20036DataIndicators `json:"indicators"`
	UpdateTime int64 `json:"updateTime"`
}

// NewInlineResponse20036Data instantiates a new InlineResponse20036Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20036Data(isLocked bool, plannedRecoverTime int64, triggerCondition InlineResponse20036DataTriggerCondition, indicators InlineResponse20036DataIndicators, updateTime int64) *InlineResponse20036Data {
	this := InlineResponse20036Data{}
	this.IsLocked = isLocked
	this.PlannedRecoverTime = plannedRecoverTime
	this.TriggerCondition = triggerCondition
	this.Indicators = indicators
	this.UpdateTime = updateTime
	return &this
}

// NewInlineResponse20036DataWithDefaults instantiates a new InlineResponse20036Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20036DataWithDefaults() *InlineResponse20036Data {
	this := InlineResponse20036Data{}
	return &this
}

// GetIsLocked returns the IsLocked field value
func (o *InlineResponse20036Data) GetIsLocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20036Data) GetIsLockedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsLocked, true
}

// SetIsLocked sets field value
func (o *InlineResponse20036Data) SetIsLocked(v bool) {
	o.IsLocked = v
}

// GetPlannedRecoverTime returns the PlannedRecoverTime field value
func (o *InlineResponse20036Data) GetPlannedRecoverTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PlannedRecoverTime
}

// GetPlannedRecoverTimeOk returns a tuple with the PlannedRecoverTime field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20036Data) GetPlannedRecoverTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PlannedRecoverTime, true
}

// SetPlannedRecoverTime sets field value
func (o *InlineResponse20036Data) SetPlannedRecoverTime(v int64) {
	o.PlannedRecoverTime = v
}

// GetTriggerCondition returns the TriggerCondition field value
func (o *InlineResponse20036Data) GetTriggerCondition() InlineResponse20036DataTriggerCondition {
	if o == nil {
		var ret InlineResponse20036DataTriggerCondition
		return ret
	}

	return o.TriggerCondition
}

// GetTriggerConditionOk returns a tuple with the TriggerCondition field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20036Data) GetTriggerConditionOk() (*InlineResponse20036DataTriggerCondition, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TriggerCondition, true
}

// SetTriggerCondition sets field value
func (o *InlineResponse20036Data) SetTriggerCondition(v InlineResponse20036DataTriggerCondition) {
	o.TriggerCondition = v
}

// GetIndicators returns the Indicators field value
func (o *InlineResponse20036Data) GetIndicators() InlineResponse20036DataIndicators {
	if o == nil {
		var ret InlineResponse20036DataIndicators
		return ret
	}

	return o.Indicators
}

// GetIndicatorsOk returns a tuple with the Indicators field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20036Data) GetIndicatorsOk() (*InlineResponse20036DataIndicators, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Indicators, true
}

// SetIndicators sets field value
func (o *InlineResponse20036Data) SetIndicators(v InlineResponse20036DataIndicators) {
	o.Indicators = v
}

// GetUpdateTime returns the UpdateTime field value
func (o *InlineResponse20036Data) GetUpdateTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20036Data) GetUpdateTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdateTime, true
}

// SetUpdateTime sets field value
func (o *InlineResponse20036Data) SetUpdateTime(v int64) {
	o.UpdateTime = v
}

func (o InlineResponse20036Data) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["isLocked"] = o.IsLocked
	}
	if true {
		toSerialize["plannedRecoverTime"] = o.PlannedRecoverTime
	}
	if true {
		toSerialize["triggerCondition"] = o.TriggerCondition
	}
	if true {
		toSerialize["indicators"] = o.Indicators
	}
	if true {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20036Data struct {
	value *InlineResponse20036Data
	isSet bool
}

func (v NullableInlineResponse20036Data) Get() *InlineResponse20036Data {
	return v.value
}

func (v *NullableInlineResponse20036Data) Set(val *InlineResponse20036Data) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20036Data) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20036Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20036Data(val *InlineResponse20036Data) *NullableInlineResponse20036Data {
	return &NullableInlineResponse20036Data{value: val, isSet: true}
}

func (v NullableInlineResponse20036Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20036Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


