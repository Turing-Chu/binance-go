/*
Binance Public Spot API

OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20091DataConfigDetails struct for InlineResponse20091DataConfigDetails
type InlineResponse20091DataConfigDetails struct {
	// Mining ID
	ConfigId int64 `json:"configId"`
	// Transfer out of subaccount
	PoolUsername string `json:"poolUsername"`
	// Transfer into subaccount
	ToPoolUsername string `json:"toPoolUsername"`
	// Transfer algorithm
	AlgoName string `json:"algoName"`
	// Transferred Hashrate quantity
	HashRate int64 `json:"hashRate"`
	// Start date
	StartDay int64 `json:"startDay"`
	// End date
	EndDay int64 `json:"endDay"`
	// 0 Processing, 1：Cancelled, 2：Terminated 
	Status int32 `json:"status"`
}

// NewInlineResponse20091DataConfigDetails instantiates a new InlineResponse20091DataConfigDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20091DataConfigDetails(configId int64, poolUsername string, toPoolUsername string, algoName string, hashRate int64, startDay int64, endDay int64, status int32) *InlineResponse20091DataConfigDetails {
	this := InlineResponse20091DataConfigDetails{}
	this.ConfigId = configId
	this.PoolUsername = poolUsername
	this.ToPoolUsername = toPoolUsername
	this.AlgoName = algoName
	this.HashRate = hashRate
	this.StartDay = startDay
	this.EndDay = endDay
	this.Status = status
	return &this
}

// NewInlineResponse20091DataConfigDetailsWithDefaults instantiates a new InlineResponse20091DataConfigDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20091DataConfigDetailsWithDefaults() *InlineResponse20091DataConfigDetails {
	this := InlineResponse20091DataConfigDetails{}
	return &this
}

// GetConfigId returns the ConfigId field value
func (o *InlineResponse20091DataConfigDetails) GetConfigId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ConfigId
}

// GetConfigIdOk returns a tuple with the ConfigId field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20091DataConfigDetails) GetConfigIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConfigId, true
}

// SetConfigId sets field value
func (o *InlineResponse20091DataConfigDetails) SetConfigId(v int64) {
	o.ConfigId = v
}

// GetPoolUsername returns the PoolUsername field value
func (o *InlineResponse20091DataConfigDetails) GetPoolUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolUsername
}

// GetPoolUsernameOk returns a tuple with the PoolUsername field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20091DataConfigDetails) GetPoolUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PoolUsername, true
}

// SetPoolUsername sets field value
func (o *InlineResponse20091DataConfigDetails) SetPoolUsername(v string) {
	o.PoolUsername = v
}

// GetToPoolUsername returns the ToPoolUsername field value
func (o *InlineResponse20091DataConfigDetails) GetToPoolUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToPoolUsername
}

// GetToPoolUsernameOk returns a tuple with the ToPoolUsername field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20091DataConfigDetails) GetToPoolUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ToPoolUsername, true
}

// SetToPoolUsername sets field value
func (o *InlineResponse20091DataConfigDetails) SetToPoolUsername(v string) {
	o.ToPoolUsername = v
}

// GetAlgoName returns the AlgoName field value
func (o *InlineResponse20091DataConfigDetails) GetAlgoName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlgoName
}

// GetAlgoNameOk returns a tuple with the AlgoName field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20091DataConfigDetails) GetAlgoNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AlgoName, true
}

// SetAlgoName sets field value
func (o *InlineResponse20091DataConfigDetails) SetAlgoName(v string) {
	o.AlgoName = v
}

// GetHashRate returns the HashRate field value
func (o *InlineResponse20091DataConfigDetails) GetHashRate() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.HashRate
}

// GetHashRateOk returns a tuple with the HashRate field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20091DataConfigDetails) GetHashRateOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HashRate, true
}

// SetHashRate sets field value
func (o *InlineResponse20091DataConfigDetails) SetHashRate(v int64) {
	o.HashRate = v
}

// GetStartDay returns the StartDay field value
func (o *InlineResponse20091DataConfigDetails) GetStartDay() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StartDay
}

// GetStartDayOk returns a tuple with the StartDay field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20091DataConfigDetails) GetStartDayOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StartDay, true
}

// SetStartDay sets field value
func (o *InlineResponse20091DataConfigDetails) SetStartDay(v int64) {
	o.StartDay = v
}

// GetEndDay returns the EndDay field value
func (o *InlineResponse20091DataConfigDetails) GetEndDay() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EndDay
}

// GetEndDayOk returns a tuple with the EndDay field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20091DataConfigDetails) GetEndDayOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndDay, true
}

// SetEndDay sets field value
func (o *InlineResponse20091DataConfigDetails) SetEndDay(v int64) {
	o.EndDay = v
}

// GetStatus returns the Status field value
func (o *InlineResponse20091DataConfigDetails) GetStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20091DataConfigDetails) GetStatusOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InlineResponse20091DataConfigDetails) SetStatus(v int32) {
	o.Status = v
}

func (o InlineResponse20091DataConfigDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["configId"] = o.ConfigId
	}
	if true {
		toSerialize["poolUsername"] = o.PoolUsername
	}
	if true {
		toSerialize["toPoolUsername"] = o.ToPoolUsername
	}
	if true {
		toSerialize["algoName"] = o.AlgoName
	}
	if true {
		toSerialize["hashRate"] = o.HashRate
	}
	if true {
		toSerialize["startDay"] = o.StartDay
	}
	if true {
		toSerialize["endDay"] = o.EndDay
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20091DataConfigDetails struct {
	value *InlineResponse20091DataConfigDetails
	isSet bool
}

func (v NullableInlineResponse20091DataConfigDetails) Get() *InlineResponse20091DataConfigDetails {
	return v.value
}

func (v *NullableInlineResponse20091DataConfigDetails) Set(val *InlineResponse20091DataConfigDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20091DataConfigDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20091DataConfigDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20091DataConfigDetails(val *InlineResponse20091DataConfigDetails) *NullableInlineResponse20091DataConfigDetails {
	return &NullableInlineResponse20091DataConfigDetails{value: val, isSet: true}
}

func (v NullableInlineResponse20091DataConfigDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20091DataConfigDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


